<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zm.finance.bussiness.dao.RebateMapper">


	<resultMap type="com.zm.finance.pojo.rebate.RebateDetail" id="rebateDetail">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="order_id" property="orderId" jdbcType="VARCHAR"/>
		<result column="grade_id" property="gradeId" jdbcType="INTEGER"/>
		<result column="rebate_money" property="rebateMoney" jdbcType="NUMERIC"/>
		<result column="status" property="status" jdbcType="INTEGER"/>
		<result column="create_time" property="createTime" jdbcType="VARCHAR"/>
		<result column="update_time" property="updateTime" jdbcType="VARCHAR"/>
		<result column="remark" property="remark" jdbcType="VARCHAR"/>
		<result column="opt" property="opt" jdbcType="VARCHAR"/>
	</resultMap>
	
	<resultMap type="com.zm.finance.pojo.rebate.Rebate" id="rebate">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="grade_id" property="gradeId" jdbcType="INTEGER"/>
		<result column="can_be_presented" property="canBePresented" jdbcType="NUMERIC"/>
		<result column="already_presented" property="alreadyPresented" jdbcType="NUMERIC"/>
		<result column="shop_rebate_money" property="shopRebateMoney" jdbcType="NUMERIC"/>
		<result column="stay_to_account" property="stayToAccount" jdbcType="NUMERIC"/>
		<result column="refilling" property="refilling" jdbcType="NUMERIC"/>
		<result column="create_time" property="createTime" jdbcType="VARCHAR"/>
		<result column="remark" property="remark" jdbcType="VARCHAR"/>
		<result column="opt" property="opt" jdbcType="VARCHAR"/>
	</resultMap>
	
	<insert id="insertRebate" parameterType="Object">
		insert into rebate 
		(grade_id,can_be_presented,already_presented,stay_to_account,remark,create_time)
		VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.gradeId},#{item.canBePresented},#{item.alreadyPresented},#{item.stayToAccount},#{item.remark},now())
		</foreach>
<!-- 		ON DUPLICATE KEY UPDATE can_be_presented = values(can_be_presented),already_presented = values(already_presented), -->
<!-- 		stay_to_account = values(stay_to_account),remark = values(remark),update_time = now() -->
	</insert>
	
	<insert id="insertRebateDetail" parameterType="Object">
		insert into rebate_detail 
		(order_id,grade_id,rebate_money,remark,create_time)
		VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.orderId},#{item.gradeId},#{item.rebateMoney},#{item.remark},now())
		</foreach>
	</insert>
	
	
	<select id="selectRebateDetailById" parameterType="Object" resultMap="rebateDetail">
		select * from rebate_detail where 1=1
		<if test="gradeId != null and gradeId != ''">
			and grade_id = #{gradeId}
		</if>
		order by create_time desc
	</select>
	
	<select id="listRebate" parameterType="Object" resultMap="rebate">
		select * from rebate where 1=1 
		<if test="list != null and list.size > 0">
			and grade_id in
			<foreach collection="list" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		
	</select>
	
	<update id="updateRebateDetail" parameterType="Object">
		update rebate_detail set status = #{status}, update_time = now() where order_id = #{orderId}
	</update>
	
</mapper>