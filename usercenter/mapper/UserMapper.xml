<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zm.user.bussiness.dao.UserMapper">

	<resultMap type="com.zm.user.pojo.Grade" id="grade">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="parent_id" property="parentId" jdbcType="INTEGER" />
		<result column="parent_grade_name" property="parentGradeName" jdbcType="VARCHAR" />
		<result column="grade_type" property="gradeType" jdbcType="INTEGER" />
		<result column="grade_level" property="gradeLevel" jdbcType="INTEGER" />
		<result column="grade_name" property="gradeName" jdbcType="VARCHAR" />
		<result column="person_in_charge" property="personInCharge" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="attribute" property="attribute" jdbcType="VARCHAR" />
		<result column="grade_person_in_charge" property="gradePersonInCharge" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
		<result column="opt" property="opt" jdbcType="VARCHAR" />
		<result column="company" property="company" jdbcType="VARCHAR" />
		<result column="person_in_charge_id" property="personInChargeId" jdbcType="INTEGER" />
	</resultMap>

	<resultMap type="com.zm.user.pojo.Address" id="address">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="province" property="province" jdbcType="VARCHAR" />
		<result column="city" property="city" jdbcType="VARCHAR" />
		<result column="area" property="area" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="zipCode" property="zipCode" jdbcType="VARCHAR" />
		<result column="receive_phone" property="receivePhone"
			jdbcType="VARCHAR" />
		<result column="receive_name" property="receiveName" jdbcType="VARCHAR" />
		<result column="is_default" property="setDefault" jdbcType="INTEGER" />
	</resultMap>

	<resultMap type="com.zm.user.pojo.UserInfo" id="userInfo">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_type" property="userType"
			jdbcType="INTEGER" />
		<result column="account" property="account" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="band" property="band" jdbcType="INTEGER" />
		<result column="is_phone_validate" property="phoneValidate"
			jdbcType="INTEGER" />
		<result column="is_email_validate" property="emailValidate"
			jdbcType="INTEGER" />
		<result column="shop_id" property="shopId" jdbcType="INTEGER" />
		<result column="center_id" property="centerId" jdbcType="INTEGER" />
		<result column="guide_id" property="guideId" jdbcType="INTEGER" />
		<result column="last_login_time" property="lastLoginTime"
			jdbcType="VARCHAR" />
		<result column="ipcity" property="ipCity" jdbcType="VARCHAR" />
		<association property="userDetail" javaType="com.zm.user.pojo.UserDetail">
			<id column="detail_id" property="id" jdbcType="INTEGER" />
			<result column="id" property="userId" jdbcType="INTEGER" />
			<result column="name" property="name" jdbcType="VARCHAR" />
			<result column="nick_name" property="nickName" jdbcType="VARCHAR" />
			<result column="location" property="location" jdbcType="VARCHAR" />
			<result column="company" property="company" jdbcType="VARCHAR" />
			<result column="head_img" property="headImg" jdbcType="VARCHAR" />
			<result column="certificates" property="certificates"
				jdbcType="INTEGER" />
			<result column="idNum" property="idNum" jdbcType="VARCHAR" />
			<result column="sex" property="sex" jdbcType="INTEGER" />
		</association>
	</resultMap>

	<resultMap type="com.zm.user.pojo.UserVip" id="vipUser">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="vip_level" property="vipLevel" jdbcType="INTEGER" />
		<result column="duration" property="duration" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="center_id" property="centerId" jdbcType="INTEGER" />
	</resultMap>

	<resultMap type="com.zm.user.pojo.VipPrice" id="vipPrice">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="center_id" property="centerId" jdbcType="INTEGER" />
		<result column="vip_level" property="vipLevel" jdbcType="INTEGER" />
		<result column="duration" property="duration" jdbcType="INTEGER" />
		<result column="price" property="price" jdbcType="DECIMAL" />
		<result column="attribute" property="attribute" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
	</resultMap>

	<select id="getVipUser" parameterType="Object" resultMap="vipUser">
		select
		vip_level,duration,create_time from user_vip where user_id = #{userId}
		and center_id = #{centerId} and status = 1
	</select>

	<select id="getUserInfo" parameterType="Object" resultMap="userInfo">
		select
		u.id,u.user_type,u.account,u.phone,u.email,u.band,u.is_phone_validate,u.is_email_validate,u.shop_id,
		u.center_id,u.last_login_time,u.ipcity,ud.id as
		detail_id,ud.name,ud.nick_name,ud.company,ud.location,u.guide_id,
		ud.head_img,ud.certificates,ud.idNum,ud.sex from user u left join
		user_detail ud on u.id = ud.user_id
		where u.id = #{userId}
	</select>

	<select id="listAddress" parameterType="Object" resultMap="address">
		select * from address where user_id = #{userId, jdbcType = INTEGER}
	</select>


	<select id="userNameVerify" resultType="java.lang.Integer"
		parameterType="Object">
		select count(*) from user where 1=1
		<if test="email != null and email != ''">
			and email = #{email}
		</if>
		<if test="phone != null and phone != ''">
			and phone = #{phone}
		</if>
		<if test="account != null and account != ''">
			and account = #{account}
		</if>
	</select>

	<insert id="saveAddress" parameterType="Object">
		insert into
		address(user_id,province,city,area,address,zipcode,receive_phone,receive_name,is_default,create_time)
		values
		(#{userId},#{province},#{city},#{area},#{address},#{zipCode},#{receivePhone},#{receiveName},#{setDefault},now())
	</insert>

	<update id="updateUndefaultAddress" parameterType="Object">
		update address
		set is_default = 0 where user_id =
		#{userId, jdbcType = INTEGER}
	</update>

	<update id="updateAddress" parameterType="Object">
		update address
		<set>
			<if test="province != null and province != 'null'">
				province = #{province},
			</if>
			<if test="province != null and province == 'null'">
				province = NULL,
			</if>
			<if test="city != null and city != 'null'">
				city = #{city},
			</if>
			<if test="city != null and city == 'null'">
				city = NULL,
			</if>
			<if test="area != null and area != 'null'">
				area = #{area},
			</if>
			<if test="area != null and area == 'null'">
				area = NULL,
			</if>
			<if test="address != null and address != 'null'">
				address = #{address},
			</if>
			<if test="address != null and address == 'null'">
				address = NULL,
			</if>
			<if test="zipCode != null and zipCode != 'null'">
				zipcode = #{zipCode},
			</if>
			<if test="zipCode != null and zipCode == 'null'">
				zipcode = NULL,
			</if>
			<if test="receivePhone != null and receivePhone != 'null'">
				receive_phone = #{receivePhone},
			</if>
			<if test="receivePhone != null and receivePhone == 'null'">
				receive_phone = NULL,
			</if>
			<if test="receiveName != null and receiveName != 'null'">
				receive_name = #{receiveName},
			</if>
			<if test="receiveName != null and receiveName == 'null'">
				receive_name = NULL,
			</if>
			<if test="setDefault != null and setDefault != -101">
				is_default = #{setDefault},
			</if>
			<if test="setDefault != null and setDefault == -101">
				is_default = NULL,
			</if>
			update_time = now()
		</set>
		where id = #{id, jdbcType = INTEGER} and user_id = #{userId, jdbcType
		= INTEGER}
	</update>

	<insert id="saveUserDetail" parameterType="Object">
		insert into
		user_detail(user_id,name,nick_name,head_img,company,location,certificates,idnum,sex,create_time)
		values(#{userId,jdbcType = INTEGER},
		#{name,jdbcType =
		VARCHAR},#{nickName,jdbcType = VARCHAR},
		#{headImg,jdbcType =
		VARCHAR},#{company,jdbcType = VARCHAR},
		#{location,jdbcType =
		VARCHAR},#{certificates,jdbcType = INTEGER},
		#{idNum,jdbcType =
		VARCHAR},#{sex,jdbcType = INTEGER},now())
	</insert>

	<update id="updateUserDetail" parameterType="Object">
		update user_detail
		<set>
			<if test="nickName != null and nickName != 'null'">
				nick_name = #{nickName},
			</if>
			<if test="nickName != null and nickName == 'null'">
				nick_name = NULL,
			</if>
			<if test="company != null and company != 'null'">
				company = #{company},
			</if>
			<if test="company != null and company == 'null'">
				company = NULL,
			</if>
			<if test="location != null and location != 'null'">
				location = #{location},
			</if>
			<if test="location != null and location == 'null'">
				location = NULL,
			</if>
			<if test="headImg != null and headImg != 'null'">
				head_img = #{headImg},
			</if>
			<if test="headImg != null and headImg == 'null'">
				head_img = NULL,
			</if>
			<if test="name != null and name != 'null'">
				name = #{name},
			</if>
			<if test="name != null and name == 'null'">
				name = NULL,
			</if>
			<if test="idNum != null and idNum != 'null'">
				idnum = #{idNum},
			</if>
			<if test="idNum != null and idNum == 'null'">
				idnum = NULL,
			</if>
			<if test="sex != null and sex != -101">
				sex = #{sex},
			</if>
			<if test="sex != null and sex == -101">
				sex = NULL,
			</if>
			update_time = now()
		</set>
		where user_id = #{userId,jdbcType = INTEGER}
	</update>

	<delete id="removeAddress" parameterType="Object">
		delete from address
		where user_id = #{userId, jdbcType = INTEGER} and id = #{id, jdbcType
		= INTEGER}
	</delete>

	<insert id="saveUser" parameterType="Object" useGeneratedKeys="true"
		keyProperty="id">
		insert into
		user(phone,user_type,email,account,pwd,parent_id,band,is_phone_validate,is_email_validate,center_id,
		shop_id,guide_id,create_time)
		values
		(#{phone},#{userType},#{email},#{account},#{pwd},#{parentId},#{band},#{phoneValidate},
		#{emailValidate},#{centerId},#{shopId},#{guideId},now())
	</insert>

	<insert id="saveWechat" parameterType="Object">
		insert IGNORE into
		user_wechat(user_id,user_type,wechat,create_time)
		values
		(#{userId},#{userType},#{wechat},now())
	</insert>


	<select id="queryByWechatUnionid" parameterType="Object">
		select count(*)
		from user where wechat = #{openId}
	</select>

	<update id="updateUserPwd" parameterType="Object">
		update user set pwd =
		#{pwd} where id = #{userId,jdbcType = INTEGER}
	</update>

	<select id="listVipPrice" parameterType="Object" resultMap="vipPrice">
		select * from vip_price where center_id = #{centerId}
	</select>

	<select id="getVipPrice" parameterType="Object" resultMap="vipPrice">
		select * from vip_price where id = #{id}
	</select>

	<insert id="saveVipOrder" parameterType="Object">
		insert into
		user_vip_order(order_id, user_id, vip_price_id, create_time)
		values(#{orderId}, #{userId}, #{vipPriceId}, now())
	</insert>

	<select id="getVipUserByOrderId" parameterType="Object"
		resultMap="vipUser">
		select vp.center_id,uo.user_id,vp.duration,vp.vip_level from
		user_vip_order uo left join vip_price vp on uo.vip_price_id = vp.id
		where uo.order_id = #{orderId}
	</select>

	<insert id="saveVipUser" parameterType="Object">
		insert into
		user_vip(user_id,center_id,duration,vip_level,create_time)
		values(#{userId},#{centerId},#{duration},#{vipLevel},now())
	</insert>

	<update id="updateUserVip" parameterType="Object">
		update user_vip set
		duration = duration + #{duration} where user_id = #{userId} and
		center_id = #{centerId} and status = 1
	</update>

	<update id="updateVipOrder" parameterType="Object">
		update user_vip_order
		set status = 1, pay_time = now() where order_id = #{orderId}
	</update>

	<select id="isAlreadyPay" parameterType="Object" resultType="java.lang.Integer">
		select status from user_vip_order where order_id = #{orderId}
	</select>

	<select id="getUserIdByUserInfo" parameterType="Object"
		resultType="java.lang.Integer">
		select id from user where phone = #{phone}
	</select>

	<select id="countAddressByUserId" parameterType="Object"
		resultType="java.lang.Integer">

		select count(*) from address where user_id = #{userId}
	</select>

	<select id="countWechatBy3rdLogin" parameterType="Object"
		resultType="java.lang.Integer">

		select count(*) from user_wechat where wechat = #{wechat}
	</select>

	<insert id="saveGrade" parameterType="com.zm.user.pojo.Grade" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO grade(parent_id,grade_type,grade_name,person_in_charge,phone,attribute,grade_person_in_charge,grade_level,
		create_time,opt,company)
		VALUES (#{parentId},#{gradeType},#{gradeName},#{personInCharge},#{phone},#{attribute},
		#{gradePersonInCharge},#{gradeLevel},now(),#{opt},#{company})
	</insert>
	
	<select id="listCenterId" resultType="java.lang.Integer">
		select id from grade where grade_level = 2;
	</select>
	
	<update id="updatePersonInChargeId" parameterType="Object">
		update grade set person_in_charge_id = #{personInChargeId} where id = #{id} 
	</update>
	
	<select id="getUserIdentityId" parameterType="Object" resultMap="userInfo">
		select
		u.id,u.account,u.phone,u.center_id,u.shop_id,ud.id as
		detail_id,ud.name,ud.certificates,ud.idNum from user u left join
		user_detail ud on u.id = ud.user_id
		where u.id = #{userId}
	</select>
	
	<select id="listGradeByParentId" parameterType="Object" resultMap="grade">
		select id, grade_name from grade where parent_id = #{id}
	</select>
	
	<select id="getPhoneByUserId" parameterType="Object" resultType="java.lang.String">
		select phone from user where id = #{userId}
	</select>
	
	<select id="getParentIdByGradeId" parameterType="Object" resultType="java.lang.Integer">
		select parent_id from grade where id = #{id}
	</select>

	<insert id="saveGradeData" parameterType="com.zm.user.pojo.Grade">
		INSERT INTO grade_data
		VALUES (#{id},#{storeName},#{contacts},#{contactsPhone},#{province},#{city},
		#{district},#{address},#{storeOperator},#{operatorIDNum},#{picPath1},#{picPath2},#{picPath3},#{picPath4},now(),now(),#{opt})
	</insert>

</mapper>