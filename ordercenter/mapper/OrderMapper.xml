<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zm.order.bussiness.dao.OrderMapper">

	<resultMap type="com.zm.order.pojo.OrderInfo" id="orderBase">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="order_id" property="orderId" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="supplier_id" property="supplierId" jdbcType="INTEGER" />
		<result column="center_id" property="centerId" jdbcType="INTEGER" />
		<result column="shop_id" property="shopId" jdbcType="INTEGER" />
		<result column="guide_id" property="guideId" jdbcType="INTEGER" />
		<result column="weight" property="weight" jdbcType="INTEGER" />
		<result column="order_flag" property="orderFlag" jdbcType="INTEGER" />
		<result column="express_type" property="expressType" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<association property="orderDetail" javaType="com.zm.order.pojo.OrderDetail">
			<id column="detail_id" property="id" jdbcType="INTEGER" />
			<result column="payment" property="payment" jdbcType="DECIMAL" />
			<result column="dis_amount" property="disAmount" jdbcType="DECIMAL" />
			<result column="post_fee" property="postFee" jdbcType="DECIMAL" />
			<result column="tax_fee" property="taxFee" jdbcType="DECIMAL" />
			<result column="tariff_tax" property="tariffTax" jdbcType="DECIMAL" />
			<result column="increment_tax" property="incrementTax" jdbcType="DECIMAL" />
			<result column="excise_tax" property="exciseTax" jdbcType="DECIMAL" />
			<result column="pay_type" property="payType" jdbcType="INTEGER" />
			<result column="carry_address" property="carryAddress"
				jdbcType="VARCHAR" />
			<result column="receive_name" property="receiveName" jdbcType="VARCHAR" />
			<result column="receive_phone" property="receivePhone"
				jdbcType="VARCHAR" />
			<result column="receive_province" property="receiveProvince"
				jdbcType="VARCHAR" />
			<result column="receive_city" property="receiveCity" jdbcType="VARCHAR" />
			<result column="receive_area" property="receiveArea" jdbcType="VARCHAR" />
			<result column="receive_address" property="receiveAddress"
				jdbcType="VARCHAR" />
			<result column="receive_zip_code" property="receiveZipCode"
				jdbcType="VARCHAR" />
		</association>
		<collection ofType="com.zm.order.pojo.OrderGoods" property="orderGoodsList">
			<id column="goods_id" property="id" jdbcType="INTEGER" />
			<result column="item_name" property="itemName" jdbcType="VARCHAR" />
			<result column="sku" property="sku" jdbcType="VARCHAR" />
			<result column="item_img" property="itemImg" jdbcType="VARCHAR" />
			<result column="item_id" property="itemId" jdbcType="VARCHAR" />
			<result column="item_quantity" property="itemQuantity"
				jdbcType="INTEGER" />
			<result column="item_price" property="itemPrice" jdbcType="DECIMAL" />
			<result column="actual_price" property="actualPrice" jdbcType="DECIMAL" />
			<result column="item_info" property="itemInfo" jdbcType="VARCHAR" />
		</collection>
		<collection ofType="com.zm.order.pojo.ThirdOrderInfo"
			property="orderExpressList">
			<id column="orderExpress_id" property="id" jdbcType="INTEGER" />
			<result column="express_key" property="expressKey" jdbcType="VARCHAR" />
			<result column="oestatus" property="status" jdbcType="VARCHAR" />
			<result column="express_name" property="expressName" jdbcType="VARCHAR" />
			<result column="express_id" property="expressId" jdbcType="VARCHAR" />
			<result column="order_id" property="orderId" jdbcType="VARCHAR" />
		</collection>
	</resultMap>

	<resultMap type="com.zm.order.pojo.CustomModel" id="customModel">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="order_id" property="outRequestNo" jdbcType="VARCHAR" />
		<result column="center_id" property="centerId" jdbcType="INTEGER" />
		<result column="pay_type" property="payType" jdbcType="INTEGER" />
		<result column="pay_no" property="payNo" jdbcType="VARCHAR" />
		<result column="payment" property="amount" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap type="com.zm.order.pojo.ShoppingCart" id="shoppingCart">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="item_id" property="itemId" jdbcType="VARCHAR" />
		<result column="item_quantity" property="quantity" jdbcType="INTEGER" />
		<result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
		<result column="supplier_id" property="supplierId" jdbcType="INTEGER" />
		<result column="supplier_name" property="supplierName" jdbcType="VARCHAR" />
		<result column="center_id" property="centerId" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap type="com.zm.order.pojo.ExpressFee" id="expressFee">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="fee" property="fee" jdbcType="DECIMAL" />
		<result column="weight" property="weight" jdbcType="INTEGER" />
		<result column="heavy_fee" property="heavyFee" jdbcType="DECIMAL" />
	</resultMap>

	<resultMap type="com.zm.order.pojo.Express" id="express">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="express_key" property="expressKey" jdbcType="VARCHAR" />
		<result column="express_name" property="expressName" jdbcType="VARCHAR" />
	</resultMap>

	<select id="listPayCustomOrder" resultMap="customModel">
		select
		o.id,o.order_id,od.pay_no,od.payment,o.center_id,od.pay_type from
		order_base o left join order_detail od on o.order_id =
		od.order_id
		where o.status = 1 and o.order_flag = 0 and o.supplier_id = 1
	</select>


	<select id="listOrderByParam" resultMap="orderBase"
		parameterType="Object">
		select
		o.id,o.order_id,o.status,o.express_type,o.supplier_id,o.create_time,oe.id as orderExpress_id, od.id
		as detail_id,od.payment,od.post_fee,od.tax_fee,od.carry_address,od.receive_zip_code,od.receive_address,
		oe.express_key,oe.express_name,oe.express_id,oe.status as oestatus,
		od.receive_area,od.receive_city,od.receive_province,od.receive_phone,od.receive_name,od.pay_type,
		o.center_id,o.shop_id,o.guide_id,og.id as
		goods_id,og.item_id,og.item_name,og.item_img,og.item_quantity,og.item_price,og.actual_price,og.item_info
		from order_base o left join order_detail od on o.order_id =
		od.order_id left join order_goods og on o.order_id = og.order_id left join third_order_info oe on oe.order_id = o.order_id
		where 1=1 
		<if test="info.status != null">
			and o.order_flag = #{info.orderFlag,jdbcType = INTEGER}
		</if>
		<if test="info.status != null">
			and o.status = #{info.status,jdbcType = INTEGER}
		</if>
		<if test="statusList != null">
			and o.status in
			<foreach collection="statusList" open="(" close=")" item="item"
				separator=",">
				#{item}
			</foreach>
		</if>
		<if test="info.userId != null and info.userId != ''">
			and o.user_id = #{info.userId} and is_del = 0
		</if>
		<if test="info.centerId != null and info.centerId != ''">
			and o.center_id = #{info.centerId}
		</if>
		<if test="info.shopId != null and info.shopId != ''">
			and o.shop_id = #{info.shopId}
		</if>
		<if test="info.guideId != null and info.guideId != ''">
			and o.guide_id = #{info.guideId}
		</if>
		<if test="info.combinationId != null and info.combinationId != ''">
			and o.combination_id = #{info.combinationId}
		</if>
		<if test="info.orderId != null and info.orderId != ''">
			and o.order_id = #{info.orderId}
		</if>
		<if test="info.supplierId != null and info.supplierId != ''">
			and o.supplier_id = #{info.supplierId}
		</if>
		<if test="info.startTime != null and info.startTime != ''">
			and o.create_time &gt;= #{info.startTime}
		</if>
		<if test="info.endTime != null and info.endTime != ''">
			and o.create_time &lt;= #{info.endTime}
		</if>
		order by o.create_time desc
		<if test="pagination != null">
			limit #{pagination.startRow},#{pagination.numPerPage}
		</if>
	</select>


	<insert id="saveOrder" parameterType="Object">
		INSERT INTO order_base
		(order_id,combination_id,order_flag,user_id,express_type,center_id,shop_id,guide_id,supplier_id,tdq,
		gtime,send_time,create_time,remark,weight)
		VALUES
		(#{orderId},#{combinationId},#{orderFlag},#{userId},#{expressType},#{centerId},#{shopId},#{guideId},#{supplierId},
		#{tdq},#{gtime},#{sendTime},now(),#{remark},#{weight})
	</insert>

	<insert id="saveOrderDetail" parameterType="Object">
		INSERT INTO
		order_detail
		(order_id,pay_type,payment,pay_no,delivery_place,carry_address,receive_name,receive_phone,receive_province,
		receive_city,receive_area,receive_address,receive_zip_code,
		tax_fee,tariff_tax,increment_tax,excise_tax,create_time,remark,dis_amount)
		VALUES
		(#{orderId},#{payType},#{payment},#{payNo},#{deliveryPlace},#{carryAddress},#{receiveName},#{receivePhone},#{receiveProvince},
		#{receiveCity},#{receiveArea},#{receiveAddress},#{receiveZipCode},#{taxFee},#{tariffTax},#{incrementTax},#{exciseTax},now(),#{remark},#{disAmount});
	</insert>

	<insert id="saveOrderGoods" parameterType="Object">
		INSERT INTO
		order_goods
		(order_id,item_id,sku,item_name,item_info,item_code,item_quantity,item_price,actual_price,item_img,create_time,remark)
		VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.orderId},#{item.itemId},#{item.sku},#{item.itemName},#{item.itemInfo},#{item.itemCode},#{item.itemQuantity},#{item.itemPrice},#{item.actualPrice},#{item.itemImg},now(),#{item.remark})
		</foreach>
	</insert>

	<update id="removeUserOrder" parameterType="Object">
		update order_base set
		is_del = 1 where order_id = #{orderId,jdbcType = VARCHAR} and user_id
		= #{userId,jdbcType = INTEGER}
	</update>

	<select id="getClientIdByOrderId" parameterType="Object"
		resultType="java.lang.Integer">
		select center_id from order_base where order_id =
		#{orderId}
	</select>

	<insert id="saveShoppingCart" parameterType="Object">
		insert into
		order_shopping_cart(user_id,item_id,item_quantity,goods_name,supplier_id,supplier_name,center_id,create_time)
		values(#{userId},#{itemId},#{quantity},#{goodsName},#{supplierId},#{supplierName},#{centerId},now())
		on duplicate key update item_quantity= #{quantity} +
		item_quantity,update_time=now()
	</insert>

	<select id="listShoppingCart" parameterType="Object" resultMap="shoppingCart">
		select * from order_shopping_cart where user_id = #{userId} and
		center_id = #{centerId} order by create_time
		limit
		#{pagination.startRow},#{pagination.numPerPage}
	</select>

	<update id="updateOrderDetailPayTime" parameterType="Object">
		update order_detail set pay_time = now()
		<if test="payNo != null and payNo != ''">
			,pay_no = #{payNo}
		</if>
		where order_id = #{orderId}
	</update>
	
	<update id="updateRefundPayNo" parameterType="Object">
		update order_detail set return_pay_time = now()
		<if test="returnPayNo != null and returnPayNo != ''">
			,return_pay_no = #{returnPayNo}
		</if>
		where order_id = #{orderId}
	</update>

	<select id="getCountByStatus" parameterType="Object"
		resultType="com.zm.order.pojo.OrderCount">
		select status, count(*) as total from order_base where
		center_id=#{centerId} and user_id = #{userId} and is_del = 0 group by
		status
	</select>

	<delete id="removeShoppingCart" parameterType="Object">
		delete from order_shopping_cart where user_id=#{userId} and id in
		<foreach collection="idArr" separator="," item="item" open="("
			close=")">
			#{item}
		</foreach>
	</delete>

	<select id="countShoppingCart" parameterType="Object"
		resultType="java.lang.Integer">
		select count(*) from order_shopping_cart where center_id =
		#{centerId} and user_id = #{userId}
	</select>

	<select id="getOrderStatusByOrderId" parameterType="Object"
		resultType="java.lang.Integer">
		select status from order_base where order_id =
		#{orderId,jdbcType =
		VARCHAR}
	</select>

	<select id="getOrderByOrderId" parameterType="Object" resultMap="orderBase">
		select
		o.id,o.order_id,o.status,o.weight,o.supplier_id,o.create_time,od.id as
		detail_id,od.payment,od.post_fee,od.tax_fee,od.tariff_tax,od.increment_tax,od.excise_tax,o.order_flag,o.center_id,
		od.pay_type,od.pay_no,o.center_id,og.id as goods_id,og.item_id,og.item_name,og.item_quantity,
		og.item_price,og.actual_price,og.sku,od.dis_amount,od.receive_name,od.receive_phone,od.receive_province,
		od.receive_city,od.receive_area,od.receive_address 
		from order_base o left join order_detail od on o.order_id =od.order_id 
		left join order_goods og on o.order_id = og.order_id where o.order_id
		= #{orderId}
	</select>


	<update id="updateOrderPayType" parameterType="Object">
		update
		order_detail set pay_type = #{payType} where order_id = #{orderId}
	</update>

	<!-- 更新订单状态部分 -->
	<update id="updateOrderClose" parameterType="Object">
		update
		order_base set
		status = 9 where order_id = #{orderId}
	</update>

	<update id="updatePayCustom" parameterType="Object">
		update
		order_base set
		status = 2 where order_id = #{orderId} and status = 1
	</update>

	<update id="updateOrderCancel" parameterType="Object">
		update order_base
		set status = 8 where order_id = #{orderId,jdbcType =
		VARCHAR}
	</update>

	<update id="updateOrderPayStatusByOrderId" parameterType="Object">
		update
		order_base
		set status = 1 where order_id = #{orderId,jdbcType =
		VARCHAR} and status = 0
	</update>

	<update id="confirmUserOrder" parameterType="Object">
		update order_base
		set status = 7 where order_id = #{orderId,jdbcType = VARCHAR} and
		user_id = #{userId,jdbcType = INTEGER} and status = 6
	</update>
	
	<update id="updateOrderSendToWarehouse" parameterType="Object">
		update
		order_base set
		status = 3 where order_id = #{orderId} and status = 2
	</update>
	
	<update id="updateOrderStatusByThirdStatus" parameterType="Object">
		update
		order_base set
		status = #{orderStatus} where order_id = #{orderId} 
	</update>

	<!-- 更新订单状态END -->

	<select id="listTimeOutOrderIds" resultType="java.lang.String">
		select order_id from
		order_base where create_time &lt;= #{time} and status = 0
	</select>

	<!-- 创建邮费表 -->
	<update id="createExpressFee" parameterType="java.lang.Integer">
		CREATE TABLE IF NOT
		EXISTS express_fee_${centerId} (
		id INT UNSIGNED NOT NULL AUTO_INCREMENT,
		express_key VARCHAR(45) NOT NULL,
		name VARCHAR(45) NOT NULL COMMENT '名称',
		fee decimal(10,2) NOT NULL COMMENT '默认费用',
		weight int UNSIGNED NOT NULL COMMENT '默认重量',
		heavy_fee decimal(10,2) NOT NULL COMMENT '续重费用',
		include_province VARCHAR(1000) NULL COMMENT '包含省份',
		attr VARCHAR(100) NULL COMMENT '备用',
		create_time DATETIME NULL,
		update_time DATETIME NULL,
		opt VARCHAR(20) NULL,
		PRIMARY KEY (id)
		)ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8
		COMMENT = '快递费用设置';
	</update>

	<update id="createFreeExpressFee" parameterType="java.lang.Integer">
		CREATE TABLE IF
		NOT EXISTS free_express_fee_${centerId} (
		id INT UNSIGNED NOT NULL AUTO_INCREMENT,
		condition_fee decimal(10,2) NOT NULL COMMENT '包邮条件费用',
		attr VARCHAR(100) NULL COMMENT '备用',
		attr1 VARCHAR(100) NULL COMMENT '备用',
		create_time DATETIME NULL,
		update_time DATETIME NULL,
		opt VARCHAR(20) NULL,
		PRIMARY KEY (id)
		)ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8
		COMMENT = '包邮条件';
	</update>
	<!-- end -->

	<select id="getFreePostFee" parameterType="Object" resultType="java.lang.Double">
		select condition_fee from free_express_fee${id}
	</select>

	<select id="getExpressFee" parameterType="Object" resultMap="expressFee">
		select * from express_fee${id} where include_province like
		concat('%',#{province,jdbcType=VARCHAR},'%')
	</select>

	<select id="getDefaultFee" parameterType="Object" resultType="java.lang.Double">
		select default_fee from express
	</select>

	<select id="listExpress" resultMap="express">
		select * from express
	</select>
	
	<!-- 获取发第三方仓库的订单 -->
	<select id="listOrderForSendToTTWarehouse" resultMap="orderBase">
		select
		o.id,o.order_id,o.status,o.weight,o.supplier_id,o.create_time,od.id as
		detail_id,od.payment,od.post_fee,od.tax_fee,od.tariff_tax,od.increment_tax,od.excise_tax,o.order_flag,o.center_id
		od.pay_type,od.pay_no,o.center_id,og.id as goods_id,og.item_id,og.item_name,og.item_quantity,
		og.item_price,og.actual_price,og.sku,od.dis_amount,od.receive_name,od.receive_phone,od.receive_province,
		od.receive_city,od.receive_area,od.receive_address 
		from order_base o left join order_detail od on o.order_id =od.order_id 
		left join order_goods og on o.order_id = og.order_id where o.status=2 and supplier_id=1 and orderFlag=0 limit 10
	</select>
	
	<select id="listOrderForSendToOtherWarehouse" resultMap="orderBase">
		select
		o.id,o.order_id,o.status,o.weight,o.supplier_id,o.create_time,od.id as
		detail_id,od.payment,od.post_fee,od.tax_fee,od.tariff_tax,od.increment_tax,od.excise_tax,o.order_flag,o.center_id
		od.pay_type,od.pay_no,o.center_id,og.id as goods_id,og.item_id,og.item_name,og.item_quantity,
		og.item_price,og.actual_price,og.sku,od.dis_amount,od.receive_name,od.receive_phone,od.receive_province,
		od.receive_city,od.receive_area,od.receive_address 
		from order_base o left join order_detail od on o.order_id =od.order_id 
		left join order_goods og on o.order_id = og.order_id where o.status=1 and supplier_id !=1 and orderFlag=0 limit 10
	</select>
	
	<!-- end -->
	
	<insert id="saveThirdOrder" parameterType="Object">
		INSERT INTO
		third_order_info
		(order_id,third_order_id,supplier_id,create_time)
		VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.orderId},#{item.thirdOrderId},#{supplierId},now())
		</foreach>
	</insert>
	
	<update id="updateThirdOrderInfo" parameterType="Object">
		<foreach collection="list" item="item" index="index" open=""
			close="" separator=";">
			update third_order_info
			<set>
				status = #{item.status}, express_key = #{item.expressKey},
				express_name = #{item.expressName}, express_id = #{item.expressId}
			</set>
			where order_id = #{item.orderId} and third_order_id = #{item.thirdOrderId}
		</foreach>
	</update>
	
</mapper>