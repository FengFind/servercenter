<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zm.order.bussiness.dao.OrderMapper">

	<resultMap type="com.zm.order.pojo.OrderInfo" id="orderBase">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="order_id" property="orderId" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="express_type" property="expressType" jdbcType="INTEGER" />
		<association property="orderDetail" javaType="com.zm.order.pojo.OrderDetail">
			<id column="detail_id" property="id" jdbcType="INTEGER" />
			<result column="payment" property="payment" jdbcType="DECIMAL" />
			<result column="post_fee" property="postFee" jdbcType="DECIMAL" />
			<result column="fax_fee" property="faxFee" jdbcType="DECIMAL" />
			<result column="carry_address" property="carryAddress"
				jdbcType="VARCHAR" />
		</association>
		<collection ofType="com.zm.order.pojo.OrderGoods" property="orderGoodsList">
			<id column="goods_id" property="id" jdbcType="INTEGER" />
			<result column="item_name" property="itemName" jdbcType="VARCHAR" />
			<result column="item_quantit" property="itemQuantit" jdbcType="INTEGER" />
			<result column="item_price" property="itemPrice" jdbcType="DECIMAL" />
			<result column="actual_price" property="actualPrice" jdbcType="DECIMAL" />
			<result column="item_info" property="itemInfo" jdbcType="VARCHAR" />
		</collection>
	</resultMap>

	<resultMap type="com.zm.order.pojo.ShoppingCart" id="shoppingCart">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="item_id" property="itemId" jdbcType="VARCHAR" />
		<result column="item_quantity" property="quantity" jdbcType="INTEGER" />
		<result column="center_id" property="centerId" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
	</resultMap>


	<select id="listOrderByParam" resultMap="orderBase"
		parameterType="Object">
		select o.id,o.order_id,o.status,o.express_type,od.id as
		detail_id,od.payment,od.post_fee,od.fax_fee,od.carry_address,
		og.id as
		goods_id,og.item_name,og.item_quantity,og.item_price,og.actual_price,og.item_info
		from order_base o left join order_detail od on o.order_id =
		od.order_id left join order_goods og on o.order_id = og.order_id
		where o.order_flag = #{info.orderFlag,jdbcType = INTEGER} 
		<if test="info.status != null and info.status != ''">
			and o.status = #{status,jdbcType = INTEGER}
		</if>
		<if test="info.userId != null and info.userId != ''">
			and o.user_id = #{info.userId} and is_del = 0
		</if>
		<if test="info.centerId != null and info.centerId != ''">
			and o.center_id = #{info.centerId}
		</if>
		<if test="info.shopId != null and info.shopId != ''">
			and o.shop_id = #{info.shopId}
		</if>
		<if test="info.combinationId != null and info.combinationId != ''">
			and o.combination_id = #{info.combinationId}
		</if>
		<if test="info.orderId != null and info.orderId != ''">
			and o.order_id = #{info.orderId}
		</if>
		<if test="info.supplierId != null and info.supplierId != ''">
			and o.supplier_id = #{info.supplierId}
		</if>
		<if test="info.expressId != null and info.expressId != ''">
			and o.express_id = #{info.expressId}
		</if>
		<if test="info.startTime != null and info.startTime != ''">
			and o.create_time &gt;= #{info.startTime}
		</if>
		<if test="info.endTime != null and info.endTime != ''">
			and o.create_time &lt;= #{info.endTime}
		</if>
		order by o.create_time desc
		<if test="pagination != null">
			limit #{pagination.startRow},#{pagination.numPerPage}
		</if>
	</select>


	<insert id="saveOrder" parameterType="Object">
		INSERT INTO order_base
		(order_id,combination_id,order_flag,user_id,express_type,center_id,shop_id,supplier_id,tdq,
		carrier_key,express_id,gtime,send_time,create_time,remark)
		VALUES
		(#{orderId},#{combinationId},#{orderFlag},#{userId},#{expressType},#{centerId},#{shopId},#{supplierId},
		#{tdq},#{carrierKey},#{expressId},#{gtime},#{sendTime},now(),#{remark})
	</insert>

	<insert id="saveOrderDetail" parameterType="Object">
		INSERT INTO
		order_detail
		(order_id,pay_no,delivery_place,carry_address,receive_name,receive_phone,receive_province,receive_city,
		receive_area,receive_address,receive_zip_code,create_time,remark)
		VALUES
		(#{orderId},#{payNo},#{deliveryPlace},#{carryAddress},#{receiveName},#{receivePhone},#{receiveProvince},
		#{receiveCity},#{receiveArea},#{receiveAddress},#{receiveZipCode},now(),#{remark});
	</insert>

	<insert id="saveOrderGoods" parameterType="Object">
		INSERT INTO
		order_goods
		(order_id,item_id,sku,item_name,item_code,item_quantity,item_price,actual_price,create_time,remark)
		VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.orderId},#{item.itemId},#{item.sku},#{item.itemName},#{item.itemCode},#{item.itemQuantity},#{item.itemPrice},#{item.actualPrice},now(),#{item.remark});
		</foreach>
	</insert>

	<update id="removeUserOrder" parameterType="Object">
		update order_base set
		is_del = 1 where order_id = #{orderId,jdbcType = VARCHAR} and user_id
		= #{userId,jdbcType = INTEGER}
	</update>

	<update id="confirmUserOrder" parameterType="Object">
		update order_base
		set status = 6 where order_id = #{orderId,jdbcType = VARCHAR} and
		user_id = #{userId,jdbcType = INTEGER}
	</update>

	<update id="updateOrderPayStatusByOrderId" parameterType="Object">
		update
		order_base
		set status = 1 where order_id = #{orderId,jdbcType =
		VARCHAR} and status = 0
	</update>

	<select id="getClientIdByOrderId" parameterType="Object"
		resultType="java.lang.Integer">
		select center_id from order_base where order_id =
		#{orderId}
	</select>

	<insert id="saveShoppingCart" parameterType="Object">
		insert into
		order_shopping_cart(user_id,item_id,item_quantity,goods_name,center_id,create_time)
		values(#{userId},#{itemId},#{quantity},#{goodsName},#{centerId},now())
		on duplicate key update item_quantity= #{quantity} + values(item_quantity),update_time=now()
	</insert>

	<select id="listShoppingCart" parameterType="Object" resultMap="shoppingCart">
		select * from order_shopping_cart where user_id = #{userId} and center_id = #{centerId} order by create_time 
		limit #{pagination.startRow},#{pagination.numPerPage}
	</select>
	
	<update id="updateOrderDetailPayTime" parameterType="Object" >
		update order_detail set pay_time = now() 
		<if test="payNo != null and payNo != ''">
			,pay_no = #{payNo} 
		</if>
		where order_id = #{orderId}
	</update>
	
	<select id="getCountByStatus" parameterType="Object" resultType="com.zm.order.pojo.OrderCount">
		select status, count(*) as total from order_base where center_id=#{centerId} and user_id = #{userId} group by status
	</select>
	
	<delete id="removeShoppingCart" parameterType="Object">
		delete from order_shopping_cart where user_id=#{userId} and id in
		<foreach collection="idArr" separator="," item="item" open="(" close=")">
			#{item}
		</foreach>
	</delete>
</mapper>