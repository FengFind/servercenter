<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zm.order.bussiness.dao.OrderStockOutMapper">

	<resultMap type="com.zm.order.pojo.OrderInfo" id="orderBase">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="order_id" property="orderId" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="supplier_id" property="supplierId" jdbcType="INTEGER" />
		<result column="mall_id" property="centerId" jdbcType="INTEGER" />
		<result column="grade_id" property="shopId" jdbcType="INTEGER" />
		<result column="guide_id" property="guideId" jdbcType="INTEGER" />
		<result column="weight" property="weight" jdbcType="INTEGER" />
		<result column="order_flag" property="orderFlag" jdbcType="INTEGER" />
		<result column="create_type" property="createType" jdbcType="INTEGER" />
		<result column="push_user_id" property="pushUserId" jdbcType="INTEGER" />
		<result column="coupon_ids" property="couponIds" jdbcType="VARCHAR" />
		<result column="express_type" property="expressType" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="order_source" property="orderSource" jdbcType="INTEGER" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="is_eshop_in" property="isEshopIn" jdbcType="INTEGER" />
		<association property="orderDetail" javaType="com.zm.order.pojo.OrderDetail">
			<id column="detail_id" property="id" jdbcType="INTEGER" />
			<result column="payment" property="payment" jdbcType="DECIMAL" />
			<result column="dis_amount" property="disAmount" jdbcType="DECIMAL" />
			<result column="post_fee" property="postFee" jdbcType="DECIMAL" />
			<result column="tax_fee" property="taxFee" jdbcType="DECIMAL" />
			<result column="tariff_tax" property="tariffTax" jdbcType="DECIMAL" />
			<result column="increment_tax" property="incrementTax"
				jdbcType="DECIMAL" />
			<result column="pay_time" property="payTime" jdbcType="VARCHAR" />
			<result column="pay_no" property="payNo" jdbcType="VARCHAR" />
			<result column="excise_tax" property="exciseTax" jdbcType="DECIMAL" />
			<result column="pay_type" property="payType" jdbcType="INTEGER" />
			<result column="carry_address" property="carryAddress"
				jdbcType="VARCHAR" />
			<result column="receive_name" property="receiveName" jdbcType="VARCHAR" />
			<result column="receive_phone" property="receivePhone"
				jdbcType="VARCHAR" />
			<result column="receive_province" property="receiveProvince"
				jdbcType="VARCHAR" />
			<result column="receive_city" property="receiveCity" jdbcType="VARCHAR" />
			<result column="receive_area" property="receiveArea" jdbcType="VARCHAR" />
			<result column="receive_address" property="receiveAddress"
				jdbcType="VARCHAR" />
			<result column="receive_zip_code" property="receiveZipCode"
				jdbcType="VARCHAR" />
		</association>
		<collection ofType="com.zm.order.pojo.ThirdOrderInfo"
			property="orderExpressList">
			<id column="orderExpress_id" property="id" jdbcType="INTEGER" />
			<result column="express_key" property="expressKey" jdbcType="VARCHAR" />
			<result column="oestatus" property="status" jdbcType="VARCHAR" />
			<result column="express_name" property="expressName" jdbcType="VARCHAR" />
			<result column="express_id" property="expressId" jdbcType="VARCHAR" />
			<result column="order_id" property="orderId" jdbcType="VARCHAR" />
		</collection>
	</resultMap>
	
	<resultMap type="com.zm.order.pojo.OrderGoods" id="orderGoods">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="item_name" property="itemName" jdbcType="VARCHAR" />
		<result column="sku" property="sku" jdbcType="VARCHAR" />
		<result column="item_img" property="itemImg" jdbcType="VARCHAR" />
		<result column="item_id" property="itemId" jdbcType="VARCHAR" />
		<result column="item_code" property="itemCode" jdbcType="VARCHAR" />
		<result column="item_quantity" property="itemQuantity"
			jdbcType="INTEGER" />
		<result column="item_price" property="itemPrice" jdbcType="DECIMAL" />
		<result column="actual_price" property="actualPrice" jdbcType="DECIMAL" />
		<result column="item_info" property="itemInfo" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap type="com.zm.order.pojo.OrderInfoListForDownload" id="orderInfoListForDownload">
		<result column="order_id" property="orderId" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="grade_id" property="gradeId" jdbcType="INTEGER" />
		<result column="grade_name" property="gradeName" jdbcType="VARCHAR" />
		<result column="supplier_id" property="supplierId" jdbcType="INTEGER" />
		<result column="supplier_name" property="supplierName" jdbcType="VARCHAR" />
		<result column="sku" property="sku" jdbcType="VARCHAR" />
		<result column="item_name" property="itemName" jdbcType="VARCHAR" />
		<result column="proxy_price" property="proxyPrice" jdbcType="DECIMAL" />
		<result column="retail_price" property="retailPrice" jdbcType="DECIMAL" />
		<result column="item_info" property="itemInfo" jdbcType="VARCHAR" />
		<result column="item_quantity" property="itemQuantity" jdbcType="INTEGER" />
		<result column="first_id" property="firstId" jdbcType="VARCHAR" />
		<result column="first_name" property="firstName" jdbcType="VARCHAR" />
		<result column="second_id" property="secondId" jdbcType="VARCHAR" />
		<result column="second_name" property="secondName" jdbcType="VARCHAR" />
		<result column="third_id" property="thirdId" jdbcType="VARCHAR" />
		<result column="third_name" property="thirdName" jdbcType="VARCHAR" />
		<result column="payment" property="payment" jdbcType="DECIMAL" />
		<result column="pay_type" property="payType" jdbcType="INTEGER" />
		<result column="pay_no" property="payNo" jdbcType="VARCHAR" />
		<result column="pay_time" property="payTime" jdbcType="VARCHAR" />
		<result column="receive_name" property="receiveName" jdbcType="VARCHAR" />
		<result column="receive_province" property="receiveProvince" jdbcType="VARCHAR" />
		<result column="receive_city" property="receiveCity" jdbcType="VARCHAR" />
		<result column="receive_area" property="receiveArea" jdbcType="VARCHAR" />
		<result column="receive_address" property="receiveAddress" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="order_source" property="orderSource" jdbcType="INTEGER" />
		<result column="idnum" property="idnum" jdbcType="VARCHAR" />
		<result column="order_name" property="orderName" jdbcType="VARCHAR" />
		<result column="packing" property="packing" jdbcType="VARCHAR" />
		<result column="item_code" property="itemCode" jdbcType="VARCHAR" />
		<result column="actual_price" property="actualPrice" jdbcType="DECIMAL" />
		<result column="receive_phone" property="receivePhone" jdbcType="VARCHAR" />
		<result column="conversion" property="conversion" jdbcType="VARCHAR" />
		<result column="order_flag" property="orderFlg" jdbcType="INTEGER" />
		<collection ofType="com.zm.order.pojo.ThirdOrderInfo"
			property="orderExpressList">
			<id column="orderExpress_id" property="id" jdbcType="INTEGER" />
			<result column="express_key" property="expressKey" jdbcType="VARCHAR" />
			<result column="express_name" property="expressName" jdbcType="VARCHAR" />
			<result column="express_id" property="expressId" jdbcType="VARCHAR" />
		</collection>
	</resultMap>
	
	<resultMap type="com.zm.order.pojo.OrderInfoEntityForMJY" id="stockInOrderInfoForMJY">
		<id column="order_id" property="code" jdbcType="VARCHAR" />
		<result column="grade_id" property="storeCode" jdbcType="VARCHAR" />
		<result column="order_id" property="relatedVoucherCode" jdbcType="VARCHAR" />
		<result column="tdq" property="expectedSkuQuantity" jdbcType="INTEGER" />
		<result column="memo" property="memo" jdbcType="VARCHAR" />
		<collection ofType="com.zm.order.pojo.StockInVoucherSku"
			property="stockInVoucherSkus">
			<id column="item_id" property="skuCode" jdbcType="VARCHAR" />
			<result column="item_quantity" property="expectedQuantity" jdbcType="INTEGER" />
			<result column="actual_price" property="price" jdbcType="VARCHAR" />
			<result column="remark" property="memo" jdbcType="VARCHAR" />
			<result column="goods_id" property="goodsId" jdbcType="VARCHAR" />
		</collection>
	</resultMap>
	
	<resultMap type="com.zm.order.pojo.OrderInfoEntityForMJY" id="stockOutOrderInfoForMJY">
		<id column="order_id" property="code" jdbcType="VARCHAR" />
		<result column="grade_id" property="storeCode" jdbcType="VARCHAR" />
		<result column="order_id" property="relatedVoucherCode" jdbcType="VARCHAR" />
		<result column="tdq" property="expectedSkuQuantity" jdbcType="INTEGER" />
		<result column="memo" property="memo" jdbcType="VARCHAR" />
		<collection ofType="com.zm.order.pojo.StockOutVoucherSku"
			property="stockOutVoucherSkus">
			<id column="item_id" property="skuCode" jdbcType="VARCHAR" />
			<result column="item_quantity" property="expectedQuantity" jdbcType="INTEGER" />
			<result column="remark" property="memo" jdbcType="VARCHAR" />
			<result column="goods_id" property="goodsId" jdbcType="VARCHAR" />
		</collection>
	</resultMap>


	<select id="selectForPage" resultMap="orderBase" parameterType="Object">
		select 
		o.*,
		oe.id as orderExpress_id,oe.express_key,oe.express_name,oe.express_id,oe.status as oestatus,
		od.id as detail_id,od.payment,od.post_fee,od.tax_fee,od.carry_address,od.receive_zip_code,od.receive_address,
		od.pay_time,od.pay_no,od.receive_area,od.receive_city,od.receive_province,od.receive_phone,od.receive_name,od.pay_type 
		from 
		(select ob.id,ob.order_id,ob.status,ob.express_type,ob.supplier_id,ob.create_time,ob.mall_id,ob.grade_id,
		ob.guide_id,ob.push_user_id,ob.user_id ,ob.combination_id,ob.order_source,ob.order_flag,ob.remark,ob.is_eshop_in
		from order_base ob where
		1 = 1
		<if test="entity.status != null">
			and ob.status = #{entity.status,jdbcType = INTEGER}
		</if>
		<if test="entity.userId != null and entity.userId != ''">
			and ob.user_id = #{entity.userId}
		</if>
		<if test="list != null and list.size > 0 ">
			and ob.grade_id in 
			<foreach collection="list" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="entity.orderId != null and entity.orderId != ''">
			and ob.order_id = #{entity.orderId}
		</if>
		<if test="orderIds != null and orderIds.size > 0 ">
			and ob.order_id in 
			<foreach collection="orderIds" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="entity.supplierId != null and entity.supplierId != ''">
			and ob.supplier_id = #{entity.supplierId}
		</if>
		<if test="entity.startTime != null and entity.startTime != ''">
			and ob.create_time &gt;= #{entity.startTime}
		</if>
		<if test="entity.endTime != null and entity.endTime != ''">
			and ob.create_time &lt;= #{entity.endTime}
		</if>
		<if test="entity.orderFlag != null">
			and ob.order_flag = #{entity.orderFlag,jdbcType = INTEGER}
		</if>
<!-- 		order by ob.create_time desc limit #{entity.startRow},#{entity.numPerPage} -->
		) o 
		left join order_detail od on o.order_id = od.order_id 
		<if test="entity.orderGoodsList != null and entity.orderGoodsList.size() > 0">
			<foreach collection="entity.orderGoodsList" item="item" index="index">
				inner join (select * from order_goods 
				where 1=1
				<if test="item.itemCode != null and item.itemCode != ''">
					and item_code = #{item.itemCode}
				</if>
				<if test="item.itemId != null and item.itemId != ''">
					and item_id = #{item.itemId}
				</if>
				<if test="item.itemName != null and item.itemName != ''">
					and item_name like concat('%',#{item.itemName},'%') 
				</if>
				) 
				og on o.order_id = og.order_id 
			</foreach>
		</if>
		left join third_order_info oe on oe.order_id = o.order_id 
		<if test="entity.orderExpressList != null and entity.orderExpressList.size() > 0">
			where 1=1 and oe.express_id in 
			<foreach collection="entity.orderExpressList" item="item" index="index" open="(" separator="," close=")">
				#{item.expressId}
			</foreach>
		</if>
		<if test="page != null and page != ''">
			group by o.order_id
		</if>
		order by o.create_time desc
		<if test="pageNeed != null and pageNeed != ''">
			limit #{entity.startRow},#{entity.numPerPage}
		</if>
	</select>
	
	<select id="queryCountOrderInfo" parameterType="Object"
		resultType="java.lang.Integer">
		select count(*) from order_base ob where 1=1
		<if test="entity.status != null">
			and ob.status = #{entity.status,jdbcType = INTEGER}
		</if>
		<if test="entity.userId != null and entity.userId != ''">
			and ob.user_id = #{entity.userId}
		</if>
		<if test="list != null and list.size > 0 ">
			and ob.grade_id in 
			<foreach collection="list" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="entity.orderId != null and entity.orderId != ''">
			and ob.order_id = #{entity.orderId}
		</if>
		<if test="entity.supplierId != null and entity.supplierId != ''">
			and ob.supplier_id = #{entity.supplierId}
		</if>
		<if test="entity.startTime != null and entity.startTime != ''">
			and ob.create_time &gt;= #{entity.startTime}
		</if>
		<if test="entity.endTime != null and entity.endTime != ''">
			and ob.create_time &lt;= #{entity.endTime}
		</if>
	</select>
	
	
	<select id="selectOrderGoodsForPage" resultMap="orderGoods" parameterType="Object">
	select * from order_goods where order_id = #{orderId}
	</select>
	
	
	<select id="selectOrdreListForDownload" resultMap="orderInfoListForDownload" parameterType="Object">
		select ob.order_id,ob.status,ob.grade_id,ug.grade_name,ob.supplier_id,sb.supplier_name,
		og.sku,og.item_name,gp.proxy_price,gp.retail_price,og.item_info,og.item_quantity,gfc.first_id,
		gfc.name as first_name,gsc.second_id,gsc.name as second_name,gtc.third_id,gtc.name as third_name,
		od.payment,od.pay_type,od.pay_no,od.pay_time,od.receive_name,od.receive_province,i.conversion,
		od.receive_city,od.receive_area,od.receive_address,od.create_time,od.receive_phone,
		toi.id as orderExpress_id,toi.express_key,toi.express_name,toi.express_id,ob.order_source,
		u.idnum,u.name order_name,og.item_quantity*i.conversion packing,og.actual_price,og.item_code,
		ob.order_flag
		from zm_order.order_base ob
		left join zm_user.user_detail u on ob.user_id=u.user_id 
		left join zm_user.grade ug on ob.grade_id = ug.id
		left join zm_supplier.supplier_base sb on ob.supplier_id = sb.id
		left join zm_order.order_goods og on ob.order_id = og.order_id
		left join zm_goods.goods_price gp on og.item_id = gp.item_id
		left join zm_goods.goods g on og.goods_id = g.goods_id
		left join zm_goods.base b on g.base_id = b.id
		left join zm_goods.goods_first_category gfc on b.first_category = gfc.first_id
		left join zm_goods.goods_second_category gsc on b.first_category = gsc.first_id and b.second_category = gsc.second_id
		left join zm_goods.goods_third_category gtc on b.second_category = gtc.second_id and b.third_category = gtc.third_id
		left join zm_order.order_detail od on ob.order_id = od.order_id
		left join zm_order.third_order_info toi on ob.order_id = toi.order_id and ob.supplier_id = toi.supplier_id
		left join zm_goods.goods_item i on og.item_id=i.item_id 
		where 1=1 
		<if test="supplierId != null and supplierId != -1 ">
			and ob.supplier_id = #{supplierId}
		</if>
		<if test="list != null and list.size > 0 ">
			and ob.grade_id in 
			<foreach collection="list" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		and ob.create_time between #{startTime} and DATE_ADD(#{endTime},interval 1 day)
		order by ob.grade_id,ob.create_time
	</select>
	
	<insert id="insertOrderBaseBatch" parameterType="Object">
		INSERT INTO order_base
		(order_id,combination_id,order_flag,user_id,express_type,mall_id,grade_id,guide_id,supplier_id,tdq,
		gtime,send_time,create_time,remark,weight,create_type,coupon_ids,push_user_id,order_source,status,tag_fun,is_manual)
		VALUES
		<foreach collection="list" item="item" separator=",">
		(#{item.orderId},#{item.combinationId},#{item.orderFlag},#{item.userId},#{item.expressType},#{item.centerId},#{item.shopId},#{item.guideId},#{item.supplierId},
		#{item.tdq},#{item.gtime},#{item.sendTime},now(),#{item.remark},#{item.weight},#{item.createType},#{item.couponIds},#{item.pushUserId},#{item.orderSource},#{item.status},#{item.tagFun},#{item.manual})
		</foreach>
	</insert>
	
	<insert id="insertOrderGoodsBatch" parameterType="Object">
		INSERT INTO
		order_goods
		(order_id,item_id,goods_id,sku,item_name,item_info,item_code,item_quantity,item_price,actual_price,item_img,create_time,remark)
		VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.orderId},#{item.itemId},#{item.goodsId},#{item.sku},#{item.itemName},#{item.itemInfo},#{item.itemCode},#{item.itemQuantity},#{item.itemPrice},#{item.actualPrice},#{item.itemImg},now(),#{item.remark})
		</foreach>
	</insert>
	
	<insert id="insertOrderDetailBatch" parameterType="Object">
		INSERT INTO
		order_detail
		(order_id,pay_type,payment,pay_no,delivery_place,carry_address,receive_name,receive_phone,receive_province,
		receive_city,receive_area,receive_address,receive_zip_code,post_fee,
		tax_fee,tariff_tax,increment_tax,excise_tax,create_time,remark,dis_amount,pay_time)
		VALUES
		<foreach collection="list" item="item" separator=",">
		(#{item.orderId},#{item.payType},#{item.payment},#{item.payNo},#{item.deliveryPlace},#{item.carryAddress},#{item.receiveName},#{item.receivePhone},#{item.receiveProvince},
		#{item.receiveCity},#{item.receiveArea},#{item.receiveAddress},#{item.receiveZipCode},#{item.postFee},#{item.taxFee},#{item.tariffTax},#{item.incrementTax},#{item.exciseTax},now(),#{item.remark},#{item.disAmount},now())
		</foreach>
	</insert>
	
	<select id="getOrderByOrderId" parameterType="Object" resultMap="orderBase">
		select
		o.id,o.order_id,o.status,o.weight,o.supplier_id,o.create_time,o.user_id,o.create_type,o.push_user_id,
		o.remark,od.id as
		detail_id,od.payment,od.pay_time,od.post_fee,od.tax_fee,od.tariff_tax,od.increment_tax,od.excise_tax,o.order_flag,o.grade_id,
		od.pay_type,od.pay_no,o.mall_id,og.id as
		goods_id,og.goods_id as goodsId,og.item_id,og.item_name,og.item_quantity,og.item_code,o.order_source,
		og.item_price,og.actual_price,og.sku,od.dis_amount,od.receive_name,od.receive_phone,od.receive_province,
		od.receive_city,od.receive_area,od.receive_address
		,oe.id as orderExpress_id,oe.express_key,oe.express_name,oe.express_id,oe.status as oestatus
		from order_base o
		left join order_detail od on o.order_id =od.order_id
		left join order_goods og on o.order_id = og.order_id 
        left join third_order_info oe on oe.order_id = o.order_id 
        where o.order_id = #{orderId}
	</select>
	
	<select id="selectStockInByOrderIdForMJY" parameterType="Object" resultMap="stockInOrderInfoForMJY">
		select o.order_id,o.grade_id,o.tdq,ifnull(o.remark,'') memo,og.item_id,
		og.item_quantity,og.actual_price,ifnull(og.remark,'') remark,ifnull(og.goods_id,'') goods_id
		from order_base o
		left join order_goods og on o.order_id = og.order_id 
        where o.order_id = #{orderId}
	</select>
	
	<select id="selectStockOutByOrderIdForMJY" parameterType="Object" resultMap="stockOutOrderInfoForMJY">
		select o.order_id,o.grade_id,o.tdq,ifnull(o.remark,'') memo,og.item_id,
		og.item_quantity,ifnull(og.remark,'') remark,ifnull(og.goods_id,'') goods_id
		from order_base o
		left join order_goods og on o.order_id = og.order_id 
        where o.order_id = #{orderId}
	</select>
	
	<update id="updateOrderBaseEshopIn" parameterType="Object">
		update order_base 
		set is_eshop_in = #{isEshopIn}
		where order_id = #{orderId}
	</update>

</mapper>