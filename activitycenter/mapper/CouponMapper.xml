<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zm.activity.bussiness.dao.CouponMapper">

	<resultMap type="com.zm.activity.pojo.Coupon" id="coupon">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="coupon_id" property="couponId" jdbcType="VARCHAR" />
		<result column="activity_id" property="activityId" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="node" property="node" jdbcType="INTEGER" />
		<result column="num" property="num" jdbcType="INTEGER" />
		<result column="receive_num" property="receiveNum" jdbcType="INTEGER" />
		<result column="use_num" property="useNum" jdbcType="INTEGER" />
		<result column="issue_start_time" property="issueStartTime"
			jdbcType="VARCHAR" />
		<result column="start_time" property="startTime" jdbcType="VARCHAR" />
		<result column="end_time" property="endTime" jdbcType="VARCHAR" />
		<result column="pic_path" property="picPath" jdbcType="VARCHAR" />
		<association property="rule" javaType="com.zm.activity.pojo.Rule">
			<id column="rule_id" property="id" jdbcType="INTEGER" />
			<result column="description" property="description" jdbcType="VARCHAR" />
			<result column="condition" property="condition" jdbcType="DECIMAL" />
			<result column="deductible_value" property="deductibleValue"
				jdbcType="DECIMAL" />
			<result column="value_type" property="valueType" jdbcType="INTEGER" />
			<result column="range" property="range" jdbcType="INTEGER" />
			<result column="category" property="category" jdbcType="VARCHAR" />
			<result column="is_superposition" property="superposition"
				jdbcType="INTEGER" />
			<result column="weight" property="weight" jdbcType="INTEGER" />
			<collection property="bindingList"
				ofType="com.zm.activity.pojo.CouponGoodsbinding">
				<id column="bind_id" property="id" jdbcType="INTEGER" />
				<result column="goods_id" property="goodsId" jdbcType="VARCHAR" />
			</collection>
		</association>
	</resultMap>

	<select id="listCoupon" parameterType="Object" resultMap="coupon">
		select id, coupon_id, pic_path,num,status,name,start_time,end_time from coupon 
		where status in(2,1) and node = 0 and activity_id = #{activityId}
	</select>

	<select id="listCouponByCouponIds" parameterType="Object"
		resultMap="coupon">
		select c.id, c.coupon_id, c.pic_path, r.condition, r.id as rule_id,c.name,c.start_time,c.end_time,
		r.deductible_value,r.value_type, r.range, r.category,r.is_superposition, r.weight, cg.id as bind_id,cg.goods_id 
		from coupon c 
		left join rule r on c.rule_id = r.rule_id
		left join coupon_goods cg on cg.rule_id = r.rule_id 
		where c.status in(2,1) and c.coupon_id in
		<foreach collection="list" item="item" open="(" close=")"
			separator=",">
			#{item}
		</foreach>
	</select>

	<select id="countUserCoupon" parameterType="Object" resultType="java.lang.Integer">
		select count(*) from user_coupon u 
		left join coupon c on u.coupon_id=c.coupon_id
		where u.center_id = #{centerId} and
		u.user_id = #{userId} and u.status = 0
		and c.status in(1,2) and u.coupon_id in
		<foreach collection="list" item="item" open="(" close=")"
			separator=",">
			#{item}
		</foreach>
	</select>

	<select id="listUserCouponByUserId" parameterType="Object"
		resultType="java.lang.String">
		select coupon_id from user_coupon where center_id = #{centerId} and
		user_id = #{userId}
		<if test="status != null">
			and status = #{status}
		</if>
	</select>

	<select id="getIssueNumByCouponId" parameterType="Object"
		resultType="java.lang.Integer">
		select num from coupon where coupon_id = #{couponId}
	</select>

	<update id="updateCouponReceiveNum" parameterType="Object">
		update coupon set receive_num = #{receiveNum} where coupon_id = #{couponId}
	</update>

	<insert id="binding" parameterType="Object">
		insert ignore into
		user_coupon(user_id,coupon_id,center_id,create_time) values
		(#{userId},#{couponId},#{centerId},now())
	</insert>

	<select id="listIssueNum" parameterType="Object" resultMap="coupon">
		select num, coupon_id from coupon where num != 0 and
		status = 0 and coupon_id in
		<foreach collection="list" item="item" separator="," open="("
			close=")">
			#{item}
		</foreach>
	</select>

	<update id="updateUserCoupon" parameterType="Object">
		<foreach collection="list" item="item" separator=";" open=""
			close="">
			update user_coupon
			<set>
				status = 1
			</set>
			where center_id = #{centerId} and user_id = #{userId} and coupon_id =
			#{item}
		</foreach>
	</update>

	<update id="updateCouponGiveOut" parameterType="Object">
		<foreach collection="list" item="item" separator=";" open=""
			close="">
			update coupon set status = (case when now() >
			start_time and status=0 then 2
			when start_time > now() and status=0 then 1 else status end)
			where
			coupon_id = #{item}
		</foreach>
	</update>

	<select id="listCouponSpecialByGoodsId" parameterType="Object"
		resultMap="coupon">
		select c.id, c.coupon_id, c.pic_path,c.num,c.name,c.start_time,c.end_time 
		from coupon c 
		left join rule r on c.rule_id = r.rule_id
		left join coupon_goods cg on r.rule_id=cg.rule_id 
		where cg.goods_id=#{goodsId} and c.status in(1,2) and r.range = 4 and c.node = 0
	</select>

	<select id="listCouponByCategory" parameterType="Object"
		resultMap="coupon">
		select c.id, c.coupon_id, c.pic_path,c.num,c.name,c.start_time,c.end_time 
		from coupon c 
		left join rule r on c.rule_id = r.rule_id 
		where category = (case when r.range=1 then #{firstId} when r.range=2 
		then #{secondId} when r.range=3 then #{thirdId} end) 
		and c.status in(1,2) and c.node = 0
	
	</select>
	
	<select id="listCouponAllRange" parameterType="Object"
		resultMap="coupon">
		select c.id, c.coupon_id, c.pic_path,c.num,c.name,c.start_time,c.end_time 
		from coupon c 
		left join rule r on c.rule_id = r.rule_id 
		where r.range = 0 and c.status in(1,2) and c.node = 0
	
	</select>

	<select id="listCouponByNode" parameterType="Object" resultMap="coupon">
		select c.id, c.coupon_id, c.pic_path, c.name,c.start_time,c.end_time
		from coupon c
		where c.node = #{node} and c.status in(1,2)
	</select>

	<select id="updateCouponStatus" parameterType="Object">
		update coupon set
		status = (case when now() > start_time and status=1 then 2
		when now() > end_time and status = 2 then 3 else status end);

	</select>

</mapper>