<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zm.goods.bussiness.dao.GoodsItemMapper">

	
	<resultMap type="com.zm.goods.pojo.GoodsItemEntity" id="entity">
		<id column="id" property="id"/>
		<result column="goods_id" property="goodsId"/>
		<result column="type" property="type"/>
		<result column="item_id" property="itemId" />
		<result column="item_code" property="itemCode"/>
		<result column="conversion" property="conversion"/>
		<result column="sku" property="sku"/>
		<result column="encode" property="encode"/>
		<result column="weight" property="weight"/>
		<result column="excise_fax" property="exciseTax"/>
		<result column="status" property="status"/>
		<result column="discount" property="discount"/>
		<result column="info" property="info"/>
		<result column="create_time" property="createTime"/>
		<result column="update_time" property="updateTime"/>
		<result column="opt" property="opt"/>
		<result column="goods_name" property="goodsName"/>
		<result column="supplier_id" property="supplierId"/>
		<result column="supplier_name" property="supplierName"/>
		<result column="center_item_id" property="centerItemId"/>
		<result column="center_status" property="centerStatus"/>
		<result column="shelf_life" property="shelfLife"/>
		<result column="carton" property="carTon"/>
		<result column="retailPrice" property="retailPrice"/>
		<association property="goodsPrice" javaType="com.zm.goods.pojo.GoodsPrice">
			<result column="min" property="min"/>
			<result column="max" property="max"/>
			<result column="proxy_price" property="proxyPrice"/>
			<result column="fxprice" property="fxPrice"/>
			<result column="delivery_Place" property="deliveryPlace"/>
			<result column="retail_price" property="retailPrice"/>
		</association>
		<association property="stock" javaType="com.zm.goods.pojo.GoodsStockEntity">
			<result column="qpQty" property="qpQty"/>
			<result column="fxQty" property="fxQty"/>
			<result column="defQty" property="defQty"/>
			<result column="lockedQty" property="lockedQty"/>
			<result column="frozenQty" property="frozenQty"/>
		</association>
		<association property="tagBindEntity" javaType="com.zm.goods.pojo.ERPGoodsTagBindEntity">
			<id column="tag_bind_id" property="id" jdbcType="INTEGER" />
			<result column="tag_id" property="tagId" jdbcType="INTEGER" />
		</association>
		<association property="goodsEntity" javaType="com.zm.goods.pojo.GoodsEntity">
			<id column="g_id" property="id" jdbcType="INTEGER" />
			<result column="specs_template_id" property="templateId" jdbcType="INTEGER" />
			<result column="origin" property="origin" jdbcType="VARCHAR" />
		</association>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.GoodsPrice" id="price">
		<id column="id" property="id"/>
		<result column="item_id" property="itemId" />
		<result column="min" property="min"/>
		<result column="max" property="max"/>
		<result column="proxy_price" property="proxyPrice"/>
		<result column="fxprice" property="fxPrice"/>
		<result column="delivery_Place" property="deliveryPlace"/>
		<result column="discount" property="discount"/>
		<result column="retail_price" property="retailPrice"/>
		<result column="info" property="info"/>
		<result column="create_time" property="createTime"/>
		<result column="update_time" property="updateTime"/>
		<result column="opt" property="opt"/>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.GoodsEntity" id="goods">
		<id column="id" property="id"/>
		<result column="goods_id" property="goodsId" />
		<result column="goods_name" property="goodsName"/>
		<result column="detail_path" property="detailPath"/>
		<association property="baseEntity" javaType="com.zm.goods.pojo.GoodsBaseEntity">
			<id column="b_id" property="id" jdbcType="INTEGER" />
			<result column="first_category" property="firstCatalogId" />
			<result column="second_category" property="secondCatalogId" />
			<result column="third_category" property="thirdCatalogId" />
		</association>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.GoodsItemEntity" id="itemEntity">
		<id column="id" property="id"/>
		<result column="goods_id" property="goodsId"/>
		<result column="item_id" property="itemId" />
		<result column="item_code" property="itemCode"/>
		<result column="sku" property="sku"/>
		<result column="weight" property="weight"/>
		<result column="encode" property="encode"/>
		<result column="excise_tax" property="exciseTax"/>
		<result column="status" property="status"/>
		<result column="discount" property="discount"/>
		<result column="info" property="info"/>
		<result column="create_time" property="createTime"/>
		<result column="update_time" property="updateTime"/>
		<result column="opt" property="opt"/>
		<result column="goods_name" property="goodsName"/>
		<result column="supplier_id" property="supplierId"/>
		<result column="supplier_name" property="supplierName"/>
		<result column="center_item_id" property="centerItemId"/>
		<result column="center_status" property="centerStatus"/>
		<result column="shelf_life" property="shelfLife"/>
		<result column="carton" property="carTon"/>
		<result column="is_fx" property="isFx"/>
		<association property="goodsPrice" javaType="com.zm.goods.pojo.GoodsPrice">
			<result column="min" property="min"/>
			<result column="max" property="max"/>
			<result column="proxy_price" property="proxyPrice"/>
			<result column="fxprice" property="fxPrice"/>
			<result column="delivery_Place" property="deliveryPlace"/>
			<result column="retail_price" property="retailPrice"/>
		</association>
		<association property="stock" javaType="com.zm.goods.pojo.GoodsStockEntity">
			<result column="qpQty" property="qpQty"/>
			<result column="fxQty" property="fxQty"/>
			<result column="defQty" property="defQty"/>
			<result column="lockedQty" property="lockedQty"/>
			<result column="frozenQty" property="frozenQty"/>
		</association>
		<association property="baseEntity" javaType="com.zm.goods.pojo.GoodsBaseEntity">
			<id column="base_id" property="id"/>
			<result column="brand_id" property="brandId"/>
			<result column="brand" property="brand"/>
			<result column="increment_tax" property="incrementTax"/>
			<result column="tariff" property="tariff"/>
			<result column="unit" property="unit"/>
			<result column="hscode" property="hscode"/>
			<result column="b_encode" property="encode"/>
			<result column="first_category" property="firstCatalogId"/>
			<result column="second_category" property="secondCatalogId"/>
			<result column="third_category" property="thirdCatalogId"/>
			<result column="center_id" property="centerId"/>
		</association>
		<association property="tagBindEntity" javaType="com.zm.goods.pojo.ERPGoodsTagBindEntity">
			<id column="tag_bind_id" property="id" jdbcType="INTEGER" />
			<result column="tag_id" property="tagId" jdbcType="INTEGER" />
		</association>
		<association property="goodsEntity" javaType="com.zm.goods.pojo.GoodsEntity">
			<id column="g_id" property="id" jdbcType="INTEGER" />
			<result column="specs_template_id" property="templateId" jdbcType="INTEGER" />
			<result column="origin" property="origin" jdbcType="VARCHAR" />
			<result column="type" property="type" jdbcType="INTEGER" />
		</association>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.GoodsExtensionEntity" id="goodsExtension">
		<id column="id" property="id"/>
		<result column="goods_id" property="goodsId" />
		<result column="goods_name" property="goodsName"/>
		<result column="goods_path" property="goodsPath"/>
		<result column="brand" property="brand"/>
		<result column="specs" property="specs"/>
		<result column="origin" property="origin"/>
		<result column="custom" property="custom"/>
		<result column="shelf_life" property="shelfLife"/>
		<result column="reason" property="reason"/>
		<result column="remark" property="remark"/>
		<result column="create_time" property="createTime"/>
		<result column="update_time" property="updateTime"/>
		<result column="opt" property="opt"/>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.GoodsPriceRatioEntity" id="goodsPriceRatioBase">
		<id column="id" property="id"/>
		<result column="item_id" property="itemId" />
		<result column="ratio_platform_id" property="ratioPlatformId"/>
		<result column="ratio_platform_name" property="ratioPlatformName"/>
		<result column="ratio_price" property="ratioPrice"/>
		<result column="evaluate_qty" property="evaluateQty"/>
		<result column="sales_volume" property="salesVolume"/>
		<result column="status" property="status"/>
		<result column="grab_address" property="grabAddress"/>
		<result column="create_time" property="createTime"/>
		<result column="update_time" property="updateTime"/>
		<result column="opt" property="opt"/>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.GoodsRatioPlatformEntity" id="goodsRatioPlatformBase">
		<id column="id" property="id"/>
		<result column="ratio_platform_name" property="ratioPlatformName" />
		<result column="is_use" property="isUse"/>
		<result column="create_time" property="createTime"/>
		<result column="update_time" property="updateTime"/>
		<result column="opt" property="opt"/>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.GoodsEntity" id="goodsItems">
		<id column="goods_id" property="goodsId"/>
		<collection property="items" ofType="com.zm.goods.pojo.GoodsItemEntity">
			<id column="item_id" property="itemId"/>
		</collection>
	</resultMap>
	
	<select id="selectById" parameterType="Object" resultMap="entity">
		select i.*,g.supplier_id,g.supplier_name,g.goods_name,
		p.min,p.max,p.proxy_price,p.fxprice,p.delivery_place,p.retail_price,
		s.qpQty,s.fxqty,s.defqty,s.lockedqty,s.frozenqty 
		from goods_item i left join goods g on g.goods_id = i.goods_id
		left join goods_price p on p.item_id = i.item_id 
		left join goods_stock s on s.item_id = i.item_id where i.id=#{id} and i.is_del = 0 and g.is_del = 0
	</select>
	
	<select id="selectForPage" parameterType="Object" resultMap="itemEntity">
		select i.*,g.supplier_id,g.supplier_name,g.goods_name,g.id g_id,g.origin,g.specs_template_id,g.type,
		p.min,p.max,p.proxy_price,p.fxprice,p.delivery_place,p.retail_price,
		s.qpQty,s.fxqty,s.defqty,s.lockedqty,s.frozenqty,b.id as base_id,b.brand_id,
		b.brand,b.increment_tax,b.tariff,b.unit,b.hscode,b.encode b_encode,b.first_category,
		b.second_category,b.third_category,b.center_id
		from goods_item i 
		left join goods g on g.goods_id = i.goods_id
		left join goods_price p on p.item_id = i.item_id 
		left join goods_stock s on s.item_id = i.item_id 
		left join base b on g.base_id = b.id
		<if test="tagBindEntity !=null and tagBindEntity !=''">
			left join goods_tag_bind tag on i.item_id = tag.item_id 
		</if>
		where 1=1 and i.is_del = 0 and g.is_del = 0
		<if test="baseEntity!=null">
			<if test="baseEntity.brandId!=null and baseEntity.brandId!=''">
				and b.brand_id = #{baseEntity.brandId}
			</if> 
			<if test="baseEntity.firstCatalogId!=null and baseEntity.firstCatalogId!=''">
				and b.first_category = #{baseEntity.firstCatalogId}
			</if> 
			<if test="baseEntity.secondCatalogId!=null and baseEntity.secondCatalogId!=''">
				and b.second_category = #{baseEntity.secondCatalogId}
			</if> 
			<if test="baseEntity.thirdCatalogId!=null and baseEntity.thirdCatalogId!=''">
				and b.third_category = #{baseEntity.thirdCatalogId}
			</if> 
		</if>
		<if test="supplierId!=null and supplierId!=''">
			and g.supplier_id = #{supplierId}
		</if>
		<if test="tagBindEntity !=null and tagBindEntity !=''">
			and tag.tag_id = #{tagBindEntity.tagId}
		</if>
		<if test="status !=null and status==0">
			and i.status = '0'
		</if>
		<if test="status !=null and status==1">
			and i.status = '1'
		</if>
		<if test="status !=null and status==2">
			and i.status = '1'
			and ifnull(i.is_fx,0) = 1
		</if>
		<if test="status !=null and status==3">
			and (ifnull(s.fxqty,0) &lt;= 0 or i.is_tmpdown = '1')
		</if>
		<if test="goodsId!=null and goodsId!=''">
			and g.goods_id = #{goodsId}
		</if>
		<if test="itemId!=null and itemId!=''">
			and i.item_id = #{itemId}
		</if>
		<if test="itemCode!=null and itemCode!=''">
			and i.item_code = #{itemCode}
		</if>
		<if test="encode!=null and encode!=''">
			and i.encode = #{encode}
		</if>
		<if test="goodsName!=null and goodsName!=''">
			and g.goods_name like concat('%',#{goodsName},'%')
		</if>
		<if test="stock!=null and stock!=''">
			<if test="stock.fxQty!=null and stock.fxQty!='0'">
				and ifnull(s.fxqty,0) = 0
			</if>
		</if>
		<if test="id !=null and id !=''">
			and i.id = #{id} 
		</if>
		<if test="goodsEntity!=null">
			<if test="goodsEntity.type!=null">
				and g.type = #{goodsEntity.type}
			</if>
		</if>
		<if test="startTime !=null and startTime !=''">
			and i.update_time &gt;= #{startTime} 
		</if>
		<if test="endTime !=null and endTime !=''">
			and i.update_time &lt;= #{endTime} 
		</if>
		order by 
		<if test="orderByProperty!=null">
				${orderByProperty} ${orderByParam},
		</if> 
		i.update_time desc
	</select>
	
	<select id="selectCenterForPage" parameterType="Object" resultMap="entity">
		select i.*,g.supplier_id,g.supplier_name,g.goods_name,g.id g_id,g.origin,g.specs_template_id,g.type,
		i.item_id as center_item_id,i.status as center_status,
		p.min,p.max,p.proxy_price,p.fxprice,p.delivery_place,p.retail_price,
		s.qpQty,s.fxqty,s.defqty,s.lockedqty,s.frozenqty,tag.id as tag_bind_id,tag.tag_id 
		from goods_item i left join goods g on g.goods_id = i.goods_id
		left join goods_price p on p.item_id = i.item_id 
		left join goods_stock s on s.item_id = i.item_id 
		left join goods_tag_bind tag on i.item_id = tag.item_id
		where i.is_del = 0 and g.is_del = 0
		<if test="entity.goodsName!=null and entity.goodsName!=''">
			and g.goods_name like concat('%',#{entity.goodsName},'%') 
		</if>
		<if test="entity.itemCode!=null and entity.itemCode!=''">
			and i.item_code = #{entity.itemCode}
		</if>
		<if test="(entity.status != null and entity.status != '') or entity.status == 0">
			and i.status = #{entity.status}
		</if>
		<if test="entity.supplierId!=null and entity.supplierId!=''">
			and g.supplier_id = #{entity.supplierId}
		</if>
		<if test="entity.itemId!=null and entity.itemId!=''">
			and i.item_id = #{entity.itemId} 
		</if>
		<if test="entity.goodsId!=null and entity.goodsId !=''">
			and i.goods_id = #{entity.goodsId} 
		</if>
		<if test="entity.encode!=null and entity.encode!=''">
			and i.encode = #{entity.encode}
		</if>
		<if test="entity.sku !=null and entity.sku !=''">
			and sku = #{entity.sku} 
		</if>
		<if test="entity.id !=null and entity.id !=''">
			and id = #{entity.id} 
		</if>
		<if test="entity.tagBindEntity !=null and entity.tagBindEntity !=''">
			and tag.tag_id = #{entity.tagBindEntity.tagId}
		</if>
		<if test="entity.goodsEntity!=null">
			<if test="entity.goodsEntity.type!=null">
				and g.type = #{entity.goodsEntity.type}
			</if>
		</if>
<!-- 		order by i.id desc -->
		order by i.update_time desc,i.create_time desc
	</select>
	
	
	<insert id="insert" parameterType="Object">
		insert into goods_item 
		(goods_id,item_id,item_code,sku,weight,excise_tax,status,discount,info,create_time,update_time,opt,conversion,encode,shelf_life,carton)
		value
		(#{goodsId},#{itemId},#{itemCode},#{sku},#{weight},#{exciseTax},#{status},#{discount},#{info},now(),now(),#{opt},#{conversion},#{encode,jdbcType=VARCHAR},#{shelfLife,jdbcType=VARCHAR},#{carTon,jdbcType=VARCHAR})
	</insert>
	
	<insert id="insertBatch" parameterType="Object">
		insert into goods_item 
		(goods_id,item_id,item_code,sku,weight,excise_tax,status,discount,info,create_time,update_time,opt,conversion,encode,shelf_life,carton)
		value
		<foreach collection="list" item="item" separator=",">
			(#{item.goodsId},#{item.itemId},#{item.itemCode},#{item.sku},#{item.weight},#{item.exciseTax},#{item.status},#{item.discount},#{item.info},
			now(),now(),#{item.opt},#{item.conversion},#{item.encode,jdbcType=VARCHAR},#{item.shelfLife,jdbcType=VARCHAR},#{item.carTon,jdbcType=VARCHAR})
		</foreach>
	</insert>
	
	<insert id="insertPrice" parameterType="Object">
		insert into goods_price 
		(item_id,
		<if test="min != null and min > 0">
			min,
		</if>
		<if test="max != null and max > 0">
			max,
		</if>
		proxy_price,fxprice,retail_price,create_time,update_time,opt)
		value
		(#{itemId},
		<if test="min != null and min > 0">
			#{min},
		</if>
		<if test="max != null and max > 0">
			#{max},
		</if>
		#{proxyPrice},#{fxPrice},#{retailPrice},now(),now(),#{opt})
	</insert>
	
	<insert id="insertPriceBatch" parameterType="Object">
		insert into goods_price 
		(item_id,min,max,proxy_price,fxprice,retail_price,create_time,update_time,opt)
		value
		<foreach collection="list" item="item" separator=",">
			(#{item.itemId},#{item.min},#{item.max},#{item.proxyPrice},#{item.fxPrice},#{item.retailPrice},now(),now(),#{item.opt})
		</foreach>
	</insert>
	
	<update id="update" parameterType="Object">
		update goods_item set update_time=now()
		<if test="itemCode!=null and itemCode!=''">
			,item_code = #{itemCode}
		</if>
		<if test="sku !=null and sku !=''">
			,sku = #{sku} 
		</if>
		<if test="weight !=null and weight !=''">
			,weight = #{weight} 
		</if>
		 ,excise_tax = #{exciseTax}
		<if test="conversion !=null and conversion !=''">
			,conversion = #{conversion} 
		</if>
		<if test="encode !=null and encode !=''">
			,encode = #{encode} 
		</if>
		<if test="info !=null and info !=''">
			,info = #{info} 
		</if>
		<if test="shelfLife !=null and shelfLife !=''">
			,shelf_life = #{shelfLife} 
		</if>
		<if test="carTon !=null and carTon !=''">
			,carton = #{carTon} 
		</if>
		 where item_id  = #{itemId}
	</update>
	
	<update id="updatePrice" parameterType="Object">
		update goods_price set update_time=now()
		<if test="proxyPrice!=null and proxyPrice>0">
			,proxy_price = #{proxyPrice}
		</if>
		<if test="fxPrice !=null and fxPrice>0">
			,fxPrice = #{fxPrice}
		</if>
		<if test="retailPrice !=null and retailPrice >0">
			,retail_price = #{retailPrice}
		</if>
		<if test="min !=null">
			,min = #{min}
		</if>
		<if test="max !=null">
			,max = #{max}
		</if>
		 where item_id  = #{itemId}
	</update>
	
	
	<update id="updateStatus" parameterType="Object">
		update goods_item set status= #{status},update_time=now() where item_id  = #{itemId}
	</update>
	
	<insert id="insertStock" parameterType="Object">
		insert ignore into goods_stock 
		(item_id,qpQty,fxQty,defQty,lockedQty,frozenQty,create_time,update_time,opt)
		value
		(#{itemId},0,0,0,0,0,now(),now(),#{opt})
	</insert>
	
	<insert id="insertFiles" parameterType="Object">
		insert into goods_file 
		(goods_id,path,store_type,type,create_time,update_time,opt)
		values
		<foreach collection="list" item="item"  index="index" separator=",">
		(#{item.goodsId},#{item.path},0,0,now(),now(),#{item.opt})
		</foreach>
	</insert>
	
	<delete id="delete" parameterType="Object">
		delete from goods_item where goods_id = #{goodsId}; 
	</delete>
	
	<update id="updateFiles" parameterType="Object">
		update goods_file set path = #{path},update_time = now(),opt = #{opt}
		where id = #{id}
	</update>
	
	
	<select id="selectPurchaseCenterItem" parameterType="Object" resultMap="entity">
		select g.id,g.goods_id,g.goods_name,g.status,
		g.detail_path,g.index_status,i.item_id,
		i.item_code,i.excise_tax,i.is_promotion,
		i.discount,p.min,p.max,p.retail_price,
		p.vip_price,p.delivery_place
		from goods_2b g
		left join goods_item_2b i on g.goods_id = i.goods_id
		left join goods_price_2b p on p.item_id = i.item_id 
		where 1=1
		<if test="entity.goodsName!=null and entity.goodsName!=''">
			and g.goods_name like concat('%',#{entity.goodsName},'%') 
		</if>
		<if test="entity.itemCode!=null and entity.itemCode!=''">
			and i.item_code = #{entity.itemCode}
		</if>
		<if test="entity.status == 0 and entity.status != ''">
			and (g.status = 0 or g.status is null)
		</if>
		<if test="entity.status == 1">
			and g.status = 1
		</if>
		<if test="entity.itemId!=null and entity.itemId!=''">
			and i.item_id = #{entity.itemId} 
		</if>
		<if test="entity.goodsId!=null and entity.goodsId !=''">
			and i.goods_id = #{entity.goodsId} 
		</if>
	</select>
	
	<select id="selectPurchaseCenterItemForEdit" parameterType="Object" resultMap="price">
		select * from goods_price_2b where item_id = #{itemId}
	</select>
	
	<select id="selectItemPrice" parameterType="Object" resultMap="price">
		select * from goods_price where item_id = #{itemId}
	</select>
	
	<update id="updateItemPrice" parameterType="Object">
		update goods_price_2b set min = #{min},max = #{max},retail_price = #{retailPrice},
		update_time = now(),opt = #{opt} where item_id = #{itemId}
	</update>
	
	<select id="selectForPageDownload" parameterType="Object" resultMap="goods">
		select g.*,b.id b_id,b.first_category,b.second_category,b.third_category
		from goods_extension_label gel
		inner join goods g on g.goods_id = gel.goods_id
		inner join base b on g.base_id = b.id
		where 1=1 and g.is_del = 0
		<if test="goodsName!=null and goodsName!=''">
			and g.goods_name like concat('%',#{goodsName},'%') 
		</if>
		<if test="goodsId!=null and goodsId !=''">
			and g.goods_id = #{goodsId} 
		</if>
		<if test="id !=null and id !=''">
			and g.id = #{id} 
		</if>
		<if test="status!=null and status !=''">
			and g.status = #{status} 
		</if>
	</select>
	
	<select id="selectCenterForPageDownload" parameterType="Object" resultMap="goods">
		select g.*,b.id b_id,b.first_category,b.second_category,b.third_category
		from goods_extension_label gel 
		inner join goods g on g.goods_id = gel.goods_id
		inner join base b on g.base_id = b.id
		where g.is_del = 0
		<if test="entity.goodsName!=null and entity.goodsName!=''">
			and g.goods_name like concat('%',#{entity.goodsName},'%') 
		</if>
		<if test="entity.goodsId!=null and entity.goodsId !=''">
			and g.goods_id = #{entity.goodsId} 
		</if>
		<if test="entity.id !=null and entity.id !=''">
			and g.id = #{entity.id} 
		</if>
	</select>
	
	<update id="updateGoodsItemBeUseForBatch" parameterType="Object">
		update goods_item set status = 1, update_time=now() where status = 0 and item_id in
		<foreach collection="list" item="item" open="(" close=")"
			separator=",">
			#{item}
		</foreach>
	</update>
	
	<insert id="insertStockForBatch" parameterType="Object">
		insert ignore into goods_stock 
		(item_id,qpQty,fxQty,defQty,lockedQty,frozenQty,create_time,update_time)
		value
		<foreach collection="list" item="item" open="" close=""
			separator=",">
			(#{item},0,0,0,0,0,now(),now())
		</foreach>
	</insert>
	
	<update id="updateGoodsItemBeFxForBatch" parameterType="Object">
		update goods_item set is_fx = 1, update_time=now() where status = 1 and item_id in
		<foreach collection="list" item="item" open="(" close=")"
			separator=",">
			#{item}
		</foreach>
	</update>
	
	<delete id="deleteAllFiles" parameterType="Object">
		delete from goods_file where goods_id = #{goodsId}
	</delete>
	
	<delete id="deleteListFiles" parameterType="Object">
		delete from goods_file where id in 
		<foreach collection="list" item="item" open="(" close=")"
			separator=",">
			#{item.id}
		</foreach>
	</delete>
	
	<update id="updateSubGoodsItem">
		update goods_item,goods_item_2 set goods_item_2.update_time=now(),
		goods_item_2.goods_id=goods_item.goods_id,goods_item_2.item_id=goods_item.item_id,
		goods_item_2.item_code=goods_item.item_code,goods_item_2.encode=goods_item.encode
		where goods_item_2.item_id=goods_item.item_id and goods_item.item_id  = #{itemId}
	</update>
	
	<update id="updateGoodsStockByItemId" parameterType="Object">
		<foreach collection="list" item="item" separator=";">
			UPDATE goods_stock
	        SET
		        qpqty = qpqty + #{item.fxQty},
		        fxqty = fxqty + #{item.fxQty},
		        update_time = now(),
		        opt = #{item.opt}
	        WHERE
	        	item_id=#{item.itemId}
		</foreach>
	</update>
	
	<select id="queryItemCodeAndConversion" parameterType="Object" resultType="java.lang.String">
		select CONCAT_WS(',',item_code, conversion) from goods_item
	</select>
	
	<insert id="insertStockBatch" parameterType="Object">
		insert ignore into goods_stock 
		(item_id,qpQty,fxQty,defQty,lockedQty,frozenQty,create_time,update_time,opt)
		value
		<foreach collection="list" item="item" separator=",">
			(#{item.itemId},#{item.qpQty},#{item.fxQty},0,0,0,now(),now(),#{item.opt})
		</foreach>
	</insert>
	
	
	
	<select id="listGoodsItemByParam" parameterType="Object" resultMap="entity">
		select i.id,i.item_id,i.item_code,i.sku,g.supplier_id,i.info,p.retail_price as retailPrice,i.conversion,
		g.goods_name,g.type,g.goods_id 
		from goods_item i 
		left join goods_price p on i.item_id = p.item_id 
		left join goods g on i.goods_id=g.goods_id 
		where (i.sku,i.conversion) in 
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			(#{item.sku},#{item.conversion})
		</foreach>
	</select>
	
	<select id="listGoodsItemByItemIds" parameterType="Object" resultMap="entity">
		select i.id,i.item_id,i.item_code,g.supplier_id,i.sku,i.info,p.retail_price as retailPrice,i.conversion,
		g.goods_name,g.type,g.goods_id 
		from goods_item i 
		left join goods_price p on i.item_id = p.item_id 
		left join goods g on i.goods_id=g.goods_id 
		where i.item_id in 
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</select>
	
	<update id="updateBatch" parameterType="Object">
		<foreach collection="list" item="item" separator=";">
			update goods_item
			<set>
				<if test="item.itemCode != null and item.itemCode != ''">item_code = #{item.itemCode}, </if>
				<if test="item.sku != null and item.sku != ''">sku = #{item.sku}, </if>
				<if test="item.weight != null and item.weight != ''">weight = #{item.weight}, </if>
				<if test="item.exciseTax != null and item.exciseTax != ''">excise_tax = #{item.exciseTax}, </if>
				<if test="item.status != null and item.status != ''">status = #{item.status}, </if>
				info = #{item.info},
				<if test="item.conversion != null and item.conversion != ''">conversion = #{item.conversion}, </if>
				<if test="item.encode != null and item.encode != ''">encode = #{item.encode}, </if>
				<if test="item.shelfLife != null and item.shelfLife != ''">shelf_life = #{item.shelfLife}, </if>
				<if test="item.carTon != null and item.carTon != ''">carton = #{item.carTon}, </if>
				update_time = now(),opt = #{item.opt}
            </set>
            where item_id = #{item.itemId}
		</foreach>
	</update>
	
	<update id="updatePriceBatch" parameterType="Object">
		<foreach collection="list" item="item" separator=";">
			update goods_price
			<set>
				<if test="item.proxyPrice != null and item.proxyPrice != ''">proxy_price = #{item.proxyPrice}, </if>
				<if test="item.fxPrice != null and item.fxPrice != ''">fxprice = #{item.fxPrice}, </if>
				<if test="item.retailPrice != null and item.retailPrice != ''">retail_price = #{item.retailPrice}, </if>
				<if test="item.min != null and item.min != ''">min = #{item.min}, </if>
				<if test="item.max != null and item.max != ''">max = #{item.max}, </if>
				update_time = now(),opt = #{item.opt}
            </set>
            where item_id = #{item.itemId}
		</foreach>
	</update>
	
	<update id="updateSubGoodsItemBatch" parameterType="Object">
		<foreach collection="list" item="item" separator=";">
			update goods_item,goods_item_2 
			<set>
				goods_item_2.goods_id=goods_item.goods_id,goods_item_2.item_id=goods_item.item_id,
				goods_item_2.item_code=goods_item.item_code,goods_item_2.encode=goods_item.encode,
				goods_item_2.update_time=now()
            </set>
            where goods_item_2.item_id=goods_item.item_id and goods_item.item_id = #{item}
		</foreach>
	</update>
	
	<select id="listGoodsItemForCheck" parameterType="Object" resultMap="entity">
		select i.id,i.item_id,i.item_code,i.sku,g.supplier_id,
		p.retail_price as retailPrice,i.conversion,g.goods_name,g.type 
		from goods_item i 
		left join goods_price p on i.item_id = p.item_id 
		left join goods g on i.goods_id=g.goods_id 
		where i.sku = #{sku} and i.conversion = #{conversion}
		and i.item_id <![CDATA[ <> ]]> #{itemId}
	</select>
	
	<select id="selectGoodsExtensionForPageDownload" parameterType="Object" resultMap="goodsExtension">
		select gel.id,g.goods_id,gel.goods_path,ifnull(gel.goods_name,g.goods_name) as goods_name,
		gel.brand,gel.specs,gel.origin,gel.custom,gel.shelf_life,gel.reason,gel.remark
		from goods g 
		left join goods_extension_label gel on g.goods_id = gel.goods_id
		where 1=1 and g.is_del = 0
		<if test="goodsName!=null and goodsName!=''">
			and (gel.goods_name like concat('%',#{goodsName},'%') or g.goods_name like concat('%',#{goodsName},'%'))
		</if>
		<if test="goodsId!=null and goodsId !=''">
			and g.goods_id = #{goodsId} 
		</if>
		<if test="goodsEntity.type !=null and goodsEntity.type !=''">
			and g.type = #{goodsEntity.type} 
		</if>
		order by g.goods_id desc
	</select>
	
	<select id="selectGoodsExtensionCenterForPageDownload" parameterType="Object" resultMap="goodsExtension">
		select gel.id,g.goods_id,gel.goods_path,ifnull(gel.goods_name,g.goods_name) as goods_name,
		gel.brand,gel.specs,gel.origin,gel.custom,gel.shelf_life,gel.reason,gel.remark
		from goods g left join goods_extension_label gel on g.goods_id = gel.goods_id
		where g.is_del = 0
		<if test="entity.goodsName!=null and entity.goodsName!=''">
			and (gel.goods_name like concat('%',#{entity.goodsName},'%') or g.goods_name like concat('%',#{entity.goodsName},'%'))
		</if>
		<if test="entity.goodsId!=null and entity.goodsId !=''">
			and g.goods_id = #{entity.goodsId} 
		</if>
		order by g.goods_id desc
	</select>
	
	<select id="selectGoodsExtensionInfo" parameterType="Object" resultMap="goodsExtension">
		select gel.*
		from goods_extension_label gel
		where 1=1
		<if test="goodsName!=null and goodsName!=''">
			and gel.goods_name like concat('%',#{goodsName},'%') 
		</if>
		<if test="goodsId!=null and goodsId !=''">
			and gel.goods_id = #{goodsId} 
		</if>
	</select>
	
	<insert id="updateOrInsertGoodsExtension" parameterType="object">
		INSERT INTO goods_extension_label 
		(goods_id,goods_path,goods_name,brand,specs,origin,custom,shelf_life,reason,remark,create_time,update_time,opt) 
		VALUES (#{goodsId},#{goodsPath},#{goodsName},#{brand},#{specs},#{origin},#{custom},#{shelfLife},#{reason},#{remark},now(),now(),#{opt})
		ON DUPLICATE KEY UPDATE goods_path = #{goodsPath},goods_name = #{goodsName},brand = #{brand},
		specs = #{specs},origin = #{origin},custom = #{custom},shelf_life = #{shelfLife},reason = #{reason},
		remark = #{remark},update_time = now(),opt = #{opt}
	</insert>
	
	<select id="selectGoodsRatioPlatformForPage" parameterType="Object" resultMap="goodsRatioPlatformBase">
		select grp.*
		from goods_ratio_platform grp
		where 1=1 and grp.is_use = '0'
		<if test="ratioPlatformName!=null and ratioPlatformName!=''">
			and gpr.ratio_platform_name = #{ratioPlatformName}
		</if>
	</select>
	
	<select id="selectGoodsRatioPlatformForEdit" parameterType="Object" resultMap="goodsRatioPlatformBase">
		select grp.*
		from goods_ratio_platform grp
		where 1=1 and grp.is_use = '0' and grp.id = #{id}
	</select>
	
	<select id="selectGoodsPriceRatioListInfo" parameterType="Object" resultMap="goodsPriceRatioBase">
		select base.* from (
		select gpr.id,gpr.item_id,gpr.ratio_price,
		gpr.evaluate_qty,gpr.sales_volume,gpr.status,
		gpr.grab_address,grp.id ratio_platform_id,grp.ratio_platform_name 
		from goods_ratio_platform grp
		left join 
		(select * from goods_price_ratio 
		 where 1=1 
		 <if test="itemId!=null and itemId!=''">
			and item_id = #{itemId} 
		 </if>
		) gpr on grp.id = gpr.ratio_platform_id
		where 1=1 and grp.is_use = '0') base
	</select>
	
	<insert id="insertGoodsRatioPlatformInfo" parameterType="object">
		INSERT INTO goods_ratio_platform 
		(ratio_platform_name,is_use,create_time,update_time,opt) 
		VALUES (#{ratioPlatformName},#{isUse},now(),now(),#{opt})
	</insert>
	
	<update id="updateGoodsRatioPlatformInfo" parameterType="Object">
		update goods_ratio_platform set 
		ratio_platform_name = #{ratioPlatformName},
		is_use = #{isUse},update_time=now(),opt = #{opt}
        where id = #{id}
	</update>
	
	<insert id="syncGoodsPriceRatioInfo" parameterType="object">
		INSERT INTO goods_price_ratio 
		(item_id,ratio_platform_id,ratio_price,evaluate_qty,sales_volume,
		status,grab_address,create_time,update_time,opt)
		VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.itemId},#{item.ratioPlatformId},#{item.ratioPrice},#{item.evaluateQty},
			#{item.salesVolume},#{item.status},#{item.grabAddress},now(),now(),#{item.opt})
		</foreach>
		ON DUPLICATE KEY UPDATE 
		ratio_price = VALUES(ratio_price), evaluate_qty = VALUES(evaluate_qty),
		sales_volume = VALUES(sales_volume), status = VALUES(status), 
		grab_address = VALUES(grab_address),	update_time=now(), opt=VALUES(opt)
	</insert>
	
	<update id="updateIsFXStatus" parameterType="Object">
		update goods_item set is_fx= #{status},update_time=now() where item_id  = #{itemId}
	</update>
	
	<select id="listGoodsIdByItemList" resultMap="goodsItems">
		select goods_id,item_id from goods_item where item_id in 
		<foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
		</foreach>
		order by goods_id
	</select>
	
	<update id="updateGoodsItemNotBeFxForBatch" parameterType="Object">
		update goods_item set is_fx = 0, update_time=now() where status = 1 and item_id in
		<foreach collection="list" item="item" open="(" close=")"
			separator=",">
			#{item}
		</foreach>
	</update>
	
	<update id="updateGoodsItemUpdateTimeByItemIdList" parameterType="Object">
		update goods_item set update_time=now() where item_id in
		<foreach collection="list" item="item" open="(" close=")"
			separator=",">
			#{item}
		</foreach>
	</update>
	
	<select id="stockQtyNotEnoughGoodsItemList" parameterType="Object" resultMap="entity">
		select gi.id,gi.item_id,gs.fxqty 
		from goods_item gi
		left join goods_stock gs on gi.item_id = gs.item_id
		where gi.is_del = '0' and gi.status = '1' and gs.fxqty <![CDATA[ <= ]]> '0'
	</select>
	
	<update id="updateGoodsItemForStockNotEnough" parameterType="Object">
		update goods_item set is_tmpdown = '1',update_time=now() where item_id in
		<foreach collection="list" item="item" open="(" close=")"
			separator=",">
			#{item}
		</foreach>
	</update>
	
	<select id="stockQtyEnoughGoodsItemList" parameterType="Object" resultMap="entity">
		select gi.id,gi.item_id,gs.fxqty 
		from goods_item gi
		left join goods_stock gs on gi.item_id = gs.item_id
		where gi.is_del = '0' and gi.status = '0' and gi.is_tmpdown = '1' and gs.fxqty <![CDATA[ > ]]> '0'
	</select>
	
	<update id="updateGoodsItemForStockEnough" parameterType="Object">
		update goods_item set is_tmpdown = '0',update_time=now() where item_id in
		<foreach collection="list" item="item" open="(" close=")"
			separator=",">
			#{item}
		</foreach>
	</update>
	
	<insert id="insertGoodsShelveRecord" parameterType="object">
		INSERT INTO goods_shelve_record 
		(create_time,shelve_type,shelve_mode,number,detail) 
		VALUES (now(),#{shelveType},#{shelveMode},#{number},#{detail})
	</insert>
</mapper>