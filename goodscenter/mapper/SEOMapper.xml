<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zm.goods.bussiness.dao.SEOMapper">

	<resultMap type="com.zm.goods.pojo.po.PagePO" id="page">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="path" property="path" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="file" property="file" jdbcType="VARCHAR" />
		<result column="client" property="client" jdbcType="VARCHAR" />
		<result column="grade_id" property="gradeId" jdbcType="INTEGER" />
		<result column="page" property="page" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<collection property="module" ofType="com.zm.goods.pojo.po.ComponentPagePO">
			<id column="cpid" property="id" jdbcType="INTEGER" />
			<result column="id" property="pageId" jdbcType="INTEGER" />
			<result column="key" property="key" jdbcType="VARCHAR" />
			<result column="area" property="area" jdbcType="VARCHAR" />
			<result column="sort" property="sort" jdbcType="INTEGER" />
			<collection property="list" ofType="com.zm.goods.pojo.po.ComponentDataPO">
				<id column="cdid" property="id" jdbcType="INTEGER" />
				<result column="origin" property="origin" jdbcType="VARCHAR" />
				<result column="goods_id" property="goodsId" jdbcType="VARCHAR" />
				<result column="picPath" property="picPath" jdbcType="VARCHAR" />
				<result column="csort" property="sort" jdbcType="INTEGER" />
				<result column="title" property="title" jdbcType="VARCHAR" />
				<result column="specs" property="specs" jdbcType="VARCHAR" />
				<result column="href" property="href" jdbcType="VARCHAR" />
				<result column="enname" property="enname" jdbcType="VARCHAR" />
				<result column="price" property="price"  />
				<result column="tag_path" property="tagPath" jdbcType="VARCHAR" />
				<result column="cdescription" property="description" jdbcType="VARCHAR" />
				<result column="goods_type" property="goodsType" jdbcType="INTEGER" />
				<result column="popular" property="popular" jdbcType="INTEGER" />
				<result column="free_post" property="freePost" jdbcType="INTEGER" />
				<result column="free_tax" property="freeTax" jdbcType="INTEGER" />
				<result column="promotion" property="promotion" jdbcType="INTEGER" />
				<result column="ctype" property="type" jdbcType="INTEGER" />
			</collection>
		</collection>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.po.BigSalesGoodsRecord" id="record">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="year" property="year" jdbcType="INTEGER" />
		<result column="week" property="week" jdbcType="INTEGER" />
		<result column="sort" property="sort" jdbcType="INTEGER" />
		<result column="item_id" property="itemId" jdbcType="VARCHAR" />
		<result column="new_rebate" property="newRebate" jdbcType="NUMERIC" />
		<result column="new_retail_price" property="newRetailPrice" jdbcType="NUMERIC" />
		<result column="old_rebate" property="oldRebate" jdbcType="NUMERIC" />
		<result column="old_retail_price" property="oldRetailPrice" jdbcType="NUMERIC" />
		<result column="line_price" property="linePrice" jdbcType="NUMERIC" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="pic_path" property="picPath" jdbcType="VARCHAR" />
		<result column="goods_id" property="goodsId" jdbcType="VARCHAR" />
	</resultMap>
	
	<select id="queryGoodsCategoryPath" parameterType="Object" resultType="com.zm.goods.seo.model.CategoryPath">
		select distinct gtc.third_id as thirdId,concat_ws('/',gfc.access_path,gsc.access_path,gtc.access_path) as path from goods_first_category gfc left join
		goods_second_category gsc on gfc.first_id = gsc.first_id left join goods_third_category gtc 
		on gsc.second_id = gtc.second_id where gtc.third_id in  
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach> 
	</select>
	
	<update id="updateGoodsAccessPath" parameterType="Object">
		<foreach collection="map.entrySet()" item="value" index="key" separator=";">  
			update goods set access_path = #{value} where goods_id = #{key}
		</foreach>
	</update>
	
	<select id="listGoodsSEO" parameterType="Object" resultType="com.zm.goods.seo.model.SEOModel">
		select goods_id as goodsId,keywords, title, description from goods_seo where goods_id in 
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach> 
	</select>
	
	<select id="getGoodsAccessPath" parameterType="Object" resultType="java.lang.String">
		select access_path from kj_goods where goods_id = #{goodsId}
	</select>
	
	<select id="listPublishedIndexPageDetail" parameterType="Object" resultMap="page">
		select p.id,p.name,p.type,p.status,p.client,p.grade_id,p.path,p.page,p.file,p.description,
		cp.id as cpid,cp.key,cp.sort,cd.tag_path,cd.enname,c.area,
		cd.id as cdid,cd.picPath,cd.origin,cd.goods_id,cd.sort as csort,cd.title,cd.specs,cd.href,cd.price,
		cd.description as cdescription,cd.goods_type,cd.popular,cd.free_post,cd.free_tax,cd.promotion,cd.type as ctype from page p 
		left join component_page cp on p.id = cp.page_id left join component_data cd on cp.id = cd.cp_id left join 
		component c on cp.key = c.key where p.type = 1 and status = 2 order by p.id,cp.sort,cd.type,cd.sort
	</select>
	
	<select id="getPageById" parameterType="Object" resultMap="page">
		select p.id,p.name,p.type,p.status,p.client,p.grade_id,p.path,p.page,p.file,p.description,
		cp.id as cpid,cp.key,cp.sort,cd.tag_path,cd.enname,c.area,
		cd.id as cdid,cd.picPath,cd.origin,cd.goods_id,cd.sort as csort,cd.title,cd.specs,cd.href,cd.price,
		cd.description as cdescription,cd.goods_type,cd.popular,cd.free_post,cd.free_tax,cd.promotion,cd.type as ctype from page p 
		left join component_page cp on p.id = cp.page_id left join component_data cd on cp.id = cd.cp_id left join 
		component c on cp.key = c.key where p.id = #{id} order by cp.sort,cd.type,cd.sort
	</select>
	
	<select id="getGoodsDetailPageByPublish" parameterType="Object" resultMap="page">
		select p.id,p.name,p.type,p.status,p.client,p.grade_id,p.path,p.page,p.file,p.description,
		cp.id as cpid,cp.key,cp.sort,cd.tag_path,cd.enname,c.area,
		cd.id as cdid,cd.picPath,cd.origin,cd.goods_id,cd.sort as csort,cd.title,cd.specs,cd.href,cd.price,
		cd.description as cdescription,cd.goods_type,cd.popular,cd.free_post,cd.free_tax,cd.promotion,cd.type as ctype from page p 
		left join component_page cp on p.id = cp.page_id left join component_data cd on cp.id = cd.cp_id left join 
		component c on cp.key = c.key where p.status = 2 and p.type = 3 order by cp.sort,cd.type,cd.sort
	</select>
	
	<select id="getPageSEO" parameterType="Object" resultType="com.zm.goods.seo.model.SEOModel">
		select keywords, title, description from page_seo where page_id = #{pageId}
	</select>
	
	<update id="updatePagePublishToSave" parameterType="Object">
		update page set status = 1 where grade_id = #{gradeId} and type = #{type} and status = 2 and client = #{client}
	</update>
	
	<update id="updatePageSaveToPublish" parameterType="Object">
		update page set status = 2 where id = #{id}
	</update>
	
	<select id="getGoodsIdByItemId" parameterType="Object" resultType="java.lang.String">
		select goods_id from kj_goods_specs_tradepattern where specs_tp_id = #{specsTpId}
	</select>
	
	<select id="listRecord" parameterType="Object" resultMap="record">
		select * from big_sale_record where week = #{week} and year = #{year} order by sort
	</select>
	
	<delete id="deleteByIdList" parameterType="Object">
		delete from component_data where id in
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</delete>
	
	<insert id="insertComponentDataBatch" parameterType="Object">
		insert into component_data (cp_id,type,picPath,title,origin,price,href,goods_type,goods_id,sort,enname,create_time)
		values
		<foreach collection="list" item="item" separator=",">
			(#{item.cpId},#{item.type},#{item.picPath},#{item.title},#{item.origin},#{item.price},#{item.href},
			#{item.goodsType},#{item.goodsId},#{item.sort},#{item.enname},now())
		</foreach>
	</insert>
	
</mapper>