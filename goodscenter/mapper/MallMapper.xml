<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zm.goods.bussiness.dao.MallMapper">


	<resultMap type="com.zm.goods.pojo.PopularizeDict" id="dict">
		<id column="id" property="id"/>
		<result column="layout_id" property="layoutId"/>
		<result column="name" property="name"/>
		<result column="enname" property="enname"/>
		<result column="first_category" property="firstCategory"/>
		<result column="type" property="type"/>
		<result column="picPath1" property="picPath1"/>
		<result column="picPath2" property="picPath2"/>
		<result column="picPath3" property="picPath3"/>
		<result column="description" property="description"/>
		<result column="create_time" property="createTime"/>
		<result column="update_time" property="updateTime"/>
		<result column="opt" property="opt"/>
		<result column="href" property="href"/>
		<association property="layout" javaType="com.zm.goods.pojo.Layout">
			<result column="is_show" property="show"/>
			<result column="page_type" property="pageType"/>
			<result column="sort" property="sort"/>
		</association>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.DictData" id="data">
		<id column="id" property="id"/>
		<result column="dictId" property="dictId"/>
		<result column="href" property="href"/>
		<result column="picPath" property="picPath"/>
		<result column="title" property="title"/>
		<result column="goodsId" property="goodsId"/>
		<result column="specs" property="specs"/>
		<result column="origin" property="origin"/>
		<result column="description" property="description"/>
		<result column="price" property="price"/>
		<result column="create_time" property="createTime"/>
		<result column="update_time" property="updateTime"/>
		<result column="opt" property="opt"/>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.ComponentPage" id="component">
		<id column="id" property="id"/>
		<result column="page_id" property="pageId"/>
		<result column="key" property="key"/>
		<result column="name" property="name"/>
		<result column="sort" property="sort"/>
		<result column="create_time" property="createTime"/>
		<result column="update_time" property="updateTime"/>
		<result column="opt" property="opt"/>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.ComponentData" id="componentData">
		<id column="id" property="id"/>
		<result column="cp_id" property="cpId"/>
		<result column="type" property="type"/>
		<result column="picPath" property="picPath"/>
		<result column="description" property="description"/>
		<result column="origin" property="origin"/>
		<result column="price" property="price"/>
		<result column="href" property="href"/>
		<result column="specs" property="specs"/>
		<result column="goods_type" property="goodsType"/>
		<result column="free_post" property="freePost"/>
		<result column="free_tax" property="freeTax"/>
		<result column="popular" property="popular"/>
		<result column="goods_id" property="goodsId"/>
		<result column="sort" property="sort"/>
		<result column="tag_path" property="tagPath"/>
		<result column="enname" property="enname"/>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.po.BigSalesGoodsRecord" id="bigSaleRecord">
		<id column="id" property="id"/>
		<result column="item_id" property="itemId"/>
		<result column="new_rebate" property="newRebate"/>
		<result column="new_retail_price" property="newRetailPrice"/>
		<result column="old_rebate" property="oldRebate"/>
		<result column="old_retail_price" property="oldRetailPrice"/>
		<result column="line_price" property="linePrice"/>
		<result column="pic_path" property="picPath"/>
		<result column="year" property="year"/>
		<result column="week" property="week"/>
		<result column="sort" property="sort"/>
		<result column="goods_id" property="goodsId"/>
		<result column="goods_name" property="goodsName"/>
		<result column="start_time" property="startTime"/>
	</resultMap>

	
	<select id="selectDictById" parameterType="Object" resultMap="dict">
		select d.*,l.is_show,l.page_type,l.sort from popularize_dict_${centerId} d left join layout_${centerId} l on l.id = d.layout_id where d.id = #{id}
	</select>
	
	<select id="selectDataById" parameterType="Object" resultMap="data">
		select * from popularize_data_${centerId} where id = #{id}
	</select>
	
	<select id="selectDictForPage" parameterType="Object" resultMap="dict">
		select d.*,l.is_show,l.page_type,l.sort from popularize_dict_${centerId} d left join layout_${centerId} l on l.id = d.layout_id where l.code = 'module_00024' or l.code='module_00009' order by l.page_type,l.sort,d.create_time desc  
	</select>
	
	<select id="selectDataForPage" parameterType="Object" resultMap="data">
		select * from popularize_data_${centerId} where dictId = #{dictId}
	</select>
	
	<select id="selectDataAll" parameterType="Object" resultMap="data">
		select d.* from popularize_data_${centerId} d left join popularize_dict_${centerId} t on d.dictId = t.id
		left join layout_${centerId} l on l.id = t.layout_id where l.code = #{code}
		<if test="pageType!=null"></if>
		 and l.page_type = #{pageType}
	</select>
	
	<insert id="insertDict" useGeneratedKeys="true" keyProperty="id" parameterType="Object">
		insert into popularize_dict_${centerId} (layout_id,name,href,type,enname,first_category,picPath1,picPath2,picPath3,description,create_time,update_time,opt)
		value
		(#{layoutId},#{name},#{href},#{type},#{enname},#{firstCategory},#{picPath1},#{picPath2},#{picPath3},#{description},now(),now(),#{opt})
	</insert>
	
	<insert id="insertLayout" useGeneratedKeys="true" keyProperty="id" parameterType="Object" >
		insert into layout_${centerId} 
		(page,code,type,page_type,is_show,description,create_time,update_time,opt,sort)
		value 
		(#{page},#{code},#{type},#{pageType},#{show},#{description},now(),now(),#{opt},#{sort});
	</insert>
	
	
	<insert id="insertDataBatch"  parameterType="Object" >
		insert into popularize_data_${centerId}
		(dictId,title,origin,goodsId,href,price,picPath,create_time,update_time)
		values
		<foreach collection="list" item="item"
			separator=",">
			(#{item.dictId},#{item.title},#{item.origin},#{item.goodsId},#{item.href},#{item.price},#{item.picPath},now(),now())
		</foreach>
	</insert>
	
	<insert id="insertData"  parameterType="Object" >
		insert into popularize_data_${centerId}
		(dictId,title,origin,goodsId,href,price,picPath,create_time,description,update_time)
		values
		(#{dictId},#{title},#{origin},#{goodsId},#{href},#{price},#{picPath},now(),#{description},now())
	</insert>
	
	<update id="updateData" parameterType="Object" >
		update popularize_data_${centerId}  set description = #{description},picpath = #{picPath},update_time = now()
		<if test="goodsId!=null and goodsId!=''">
		,goodsId = #{goodsId}
		</if>
		<if test="origin!=null and origin!=''">
		,origin = #{origin}
		</if>
		<if test="title!=null and title!=''">
		,title = #{title}
		</if>
		<if test="price!=null and price!=''">
		,price = #{price}
		</if>
		<if test="picPath!=null and picPath!=''">
		,picPath = #{picPath}
		</if>
		<if test="description!=null and description!=''">
		,description = #{description}
		</if>
		<if test="href!=null and href!=''">
		,href = #{href}
		</if>
		 where id = #{id} 
	</update>
	
	<update id="updateDict" parameterType="Object" >
		update popularize_dict_${centerId}  set update_time = now()
		<if test="description!=null and description!=''">
		,description = #{description}
		</if>
		<if test="picPath1!=null and picPath1!=''">
		,picPath1 = #{picPath1}
		</if>
		<if test="enname!=null and enname!=''">
		,enname = #{enname}
		</if>
		<if test="name!=null and name!=''">
		,name = #{name}
		</if>
		<if test="firstCategory!=null and firstCategory!=''">
		,first_category = #{firstCategory}
		</if>
		<if test="href!=null and href!=''">
		,href = #{href}
		</if>
		 where id = #{id} 
	</update>
	
	<update id="updateLayout" parameterType="Object" >
		update layout_${centerId}  set update_time = now()
		<if test="opt!=null and opt!=''">
		,opt = #{opt}
		</if>
		<if test="sort!=null">
		,sort = #{sort}
		</if>
		 where id = #{id} 
	</update>
	
	<select id="selectComponentForPage" parameterType="Object" resultMap="component">
		SELECT * FROM component_page where page_id = #{pageId} order by sort  
	</select>
	
	<select id="selectComponentDataByPageId" parameterType="Object" resultMap="componentData">
		SELECT * FROM component_data where cp_id = #{pageId} order by cp_id,type,sort  
	</select>
	
	<update id="updateComponentData" parameterType="Object" >
		update Component_data set update_time = now()
		<if test="picPath!=null and picPath!=''">
		,picPath = #{picPath}
		</if>
		<if test="title!=null and title!=''">
		,title = #{title}
		</if>
		<if test="description!=null and description!=''">
		,description = #{description}
		</if>
		<if test="origin!=null and origin!=''">
		,origin = #{origin}
		</if>
		<if test="price!=null and price!=''">
		,price = #{price}
		</if>
		<if test="href!=null and href!=''">
		,href = #{href}
		</if>
		<if test="goodsId!=null and goodsId!=''">
		,goods_id = #{goodsId}
		</if>
		<if test="sort!=null and sort!=''">
		,sort = #{sort}
		</if>
		<if test="tagPath!=null and tagPath!=''">
		,tag_path = #{tagPath}
		</if>
		<if test="enname!=null and enname!=''">
		,enname = #{enname}
		</if>
		where id = #{id} 
	</update>
	
	<select id="selectBigSaleData" parameterType="Object" resultMap="bigSaleRecord">
		SELECT a.*,b.goods_name FROM big_sale_record a left join goods b on a.goods_id= b.goods_id 
		where start_time &gt; CURDATE() order by start_time,sort
	</select>
	
	<insert id="insertBigSaleDataa" parameterType="Object" >
		insert into big_sale_record (item_id, new_rebate, new_retail_price, old_rebate, old_retail_price, 
		line_price, pic_path, year, week, sort, goods_id, start_time, create_time) VALUES 
		<foreach collection="list" item="item" separator=",">
		(#{item.itemId},#{item.newRebate},#{item.newRetailPrice},#{item.oldRebate},#{item.oldRetailPrice},
		#{item.linePrice},#{item.picPath},#{item.year},#{item.week},#{item.sort},#{item.goodsId},#{item.startTime},now())
		</foreach>
	</insert>
	
	<update id="updateBigSaleData" parameterType="Object" >
		<foreach collection="list" item="item" separator=";">
			update big_sale_record 
			<set>
				update_time = now()
				<if test="item.startTime!=null and item.startTime!=''">
				,start_time = #{item.startTime}
				</if>
				<if test="item.newRetailPrice!=null and item.newRetailPrice!=''">
				,new_retail_price = #{item.newRetailPrice}
				</if>
				<if test="item.newRebate!=null and item.newRebate!=''">
				,new_rebate = #{item.newRebate}
				</if>
				<if test="item.linePrice!=null and item.linePrice!=''">
				,line_price = #{item.linePrice}
				</if>
				<if test="item.sort!=null and item.sort!=''">
				,sort = #{item.sort}
				</if>
				<if test="item.week!=null and item.week!=''">
				,week = #{item.week}
				</if>
				<if test="item.year!=null and item.year!=''">
				,year = #{item.year}
				</if>
			</set>
			where id = #{item.id}
		</foreach>
	</update>
	
</mapper>