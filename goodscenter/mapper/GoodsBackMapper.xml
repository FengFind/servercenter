<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zm.goods.bussiness.dao.GoodsBackMapper">

	
	<resultMap type="com.zm.goods.pojo.GoodsEntity" id="entity">
		<id column="id" property="id"/>
		<result column="goods_id" property="goodsId"/>
		<result column="specs_template_id" property="templateId"/>
		<result column="base_id" property="baseId"/>
		<result column="origin" property="origin"/>
		<result column="supplier_id" property="supplierId"/>
		<result column="supplier_name" property="supplierName"/>
		<result column="goods_name" property="goodsName"/>
		<result column="description" property="description"/>
		<result column="status" property="status"/>
		<result column="detail_path" property="detailPath"/>
		<result column="index_status" property="indexStatus"/>
		<result column="create_time" property="createTime"/>
		<result column="update_time" property="updateTime"/>
		<result column="opt" property="opt"/>
	</resultMap>
	

	<resultMap type="com.zm.goods.pojo.GoodsEntity" id="goodsWithItems">
			<id column="id" property="id"/>
			<result column="goods_id" property="goodsId"/>
			<result column="specs_template_id" property="templateId"/>
			<result column="base_id" property="baseId"/>
			<result column="origin" property="origin"/>
			<result column="supplier_id" property="supplierId"/>
			<result column="supplier_name" property="supplierName"/>
			<result column="goods_name" property="goodsName"/>
			<result column="description" property="description"/>
			<result column="detail_path" property="detailPath"/>
			<result column="index_status" property="indexStatus"/>
			<collection property="items"
				ofType="com.zm.goods.pojo.GoodsItemEntity">
				<result column="goods_id" property="goodsId"/>
				<result column="item_id" property="itemId" />
				<result column="item_code" property="itemCode"/>
				<result column="sku" property="sku"/>
				<result column="encode" property="encode"/>
				<result column="weight" property="weight"/>
				<result column="proxy_price" property="proxyPrice"/>
				<result column="fxprice" property="fxPrice"/>
				<result column="excise_fax" property="exciseTax"/>
				<result column="status" property="status"/>
				<result column="discount" property="discount"/>
				<result column="info" property="info"/>
			</collection>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.ThirdWarehouseGoods" id="thirdEntity">
		<id column="id" property="id"/>
		<result column="supplier_id" property="supplierId"/>
		<result column="supplier_name" property="supplierName"/>
		<result column="sku" property="sku"/>
		<result column="item_code" property="itemCode"/>
		<result column="goods_name" property="goodsName"/>
		<result column="brand" property="brand"/>
		<result column="weight" property="weight"/>
		<result column="stock" property="stock"/>
		<result column="min" property="min"/>
		<result column="max" property="max"/>
		<result column="status" property="status"/>
		<result column="create_time" property="createTime"/>
		<result column="update_time" property="updateTime"/>
		<result column="opt" property="opt"/>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.GoodsFile" id="goodsFile">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="goods_id" property="goodsId" jdbcType="VARCHAR" />
		<result column="path" property="path" jdbcType="VARCHAR" />
		<result column="suffix" property="suffix" jdbcType="VARCHAR" />
		<result column="storeType" property="storeType" jdbcType="INTEGER" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
		<result column="opt" property="opt" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.GoodsRebateEntity" id="goodsRebate">
		<id column="id" property="id"/>
		<result column="item_id" property="itemId"/>
		<result column="grade_type" property="gradeType"/>
		<result column="proportion" property="proportion"/>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.ERPGoodsTagEntity" id="goodsTag">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="tag_name" property="tagName" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="priority" property="priority" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
		<result column="opt" property="opt" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.ERPGoodsTagBindEntity" id="goodsTagBind">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="tag_id" property="tagId" jdbcType="INTEGER" />
		<result column="item_id" property="itemId" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
		<result column="opt" property="opt" jdbcType="VARCHAR" />
	</resultMap>
	
	
	<resultMap type="com.zm.goods.pojo.GoodsEntity" id="goodsWithItem">
			<id column="id" property="id"/>
			<result column="goods_id" property="goodsId"/>
			<result column="specs_template_id" property="templateId"/>
			<result column="base_id" property="baseId"/>
			<result column="origin" property="origin"/>
			<result column="supplier_id" property="supplierId"/>
			<result column="supplier_name" property="supplierName"/>
			<result column="goods_name" property="goodsName"/>
			<result column="description" property="description"/>
			<result column="detail_path" property="detailPath"/>
			<result column="index_status" property="indexStatus"/>
			<collection property="goodsItem"
				ofType="com.zm.goods.pojo.GoodsItemEntity">
				<result column="goods_id" property="goodsId"/>
				<result column="item_id" property="itemId" />
				<result column="item_code" property="itemCode"/>
				<result column="sku" property="sku"/>
				<result column="encode" property="encode"/>
				<result column="weight" property="weight"/>
				<result column="proxy_price" property="proxyPrice"/>
				<result column="fxprice" property="fxPrice"/>
				<result column="excise_fax" property="exciseTax"/>
				<result column="status" property="status"/>
				<result column="discount" property="discount"/>
				<result column="info" property="info"/>
			</collection>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.TagFuncEntity" id="tagFunc">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="fun_name" property="funcName" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
		<result column="opt" property="opt" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.GoodsItemEntity" id="goodsItemEntity">
		<id column="id" property="id"/>
		<result column="goods_id" property="goodsId"/>
		<result column="item_id" property="itemId" />
		<result column="item_code" property="itemCode"/>
		<result column="sku" property="sku"/>
		<result column="encode" property="encode"/>
		<result column="weight" property="weight"/>
		<result column="excise_tax" property="exciseTax"/>
		<result column="status" property="status"/>
		<result column="discount" property="discount"/>
		<result column="info" property="info"/>
		<result column="conversion" property="conversion"/>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.GoodsInfoListForDownload" id="goodsInfoListForDownload">
		<result column="goods_id" property="goodsId"/>
		<result column="item_id" property="itemId" />
		<result column="sku" property="sku"/>
		<result column="goods_name" property="goodsName"/>
		<result column="brand" property="brand"/>
		<result column="origin" property="origin"/>
		<result column="goods_status" property="goodsStatus"/>
		<result column="item_status" property="itemStatus"/>
		<result column="supplier_name" property="supplierName"/>
		<result column="fxqty" property="fxQty"/>
		<result column="first_name" property="firstName"/>
		<result column="second_name" property="secondName"/>
		<result column="third_name" property="thirdName"/>
		<result column="proxy_price" property="proxyPrice"/>
		<result column="fxprice" property="fxPrice"/>
		<result column="retail_price" property="retailPrice"/>
		<result column="grade_type" property="gradeType"/>
		<result column="grade_type_name" property="gradeTypeName"/>
		<result column="proportion" property="proportion"/>
	</resultMap>
	
	<select id="selectThirdForPage" parameterType="Object" resultMap="thirdEntity">
		select * from third_goods where 1=1 
		<if test="id != null and id > 0">
			and id = #{id} 
		</if>
		<if test="itemCode != null and itemCode != ''">
			and item_code = #{itemCode} 
		</if>
		<if test="sku != null and sku != ''">
			and sku = #{sku} 
		</if>
		<if test="status != null and status != -1">
			and status = #{status} 
		</if>
		<if test="supplierId != null and supplierId != -1">
			and supplier_id = #{supplierId} 
		</if>
	</select>
	
	<select id="selectThird" parameterType="Object" resultMap="thirdEntity">
		select * from third_goods where 1=1 
		<if test="id != null and id > 0">
			and id = #{id} 
		</if>
	</select>
	
	
	<select id="select" parameterType="Object" resultMap="goodsWithItems">
		select * from goods g left join goods_item i on i.goods_id = g.goods_id where g.id = #{id} 
	</select>
	
	<select id="selectById" parameterType="Object" resultMap="entity">
		select * from goods where id = #{id} 
	</select>
	
	<select id="selectForPage" parameterType="Object" resultMap="entity">
		select * from goods where 1=1 
		<if test="goodsName!=null and goodsName!=''">
			and goods_name like concat('%',#{goodsName},'%') 
		</if>
		<if test="id > 0">
			and id = #{id} 
		</if>
		<if test="goodsId != null and goodsId != ''">
			and goods_id = #{goodsId} 
		</if>
		<if test="baseId > 0">
			and base_id = #{baseId} 
		</if>
		<if test="supplierId != null and supplierId != -1">
			and supplier_id = #{supplierId} 
		</if>
	</select>
	
	<insert id="insert" parameterType="Object">
		insert into goods (goods_id,specs_template_id,base_id,supplier_id,supplier_name,goods_name,description,origin,status,detail_path,index_status,type,create_time,update_time,opt) value
		(#{goodsId},#{templateId},#{baseId},#{supplierId},#{supplierName},#{goodsName},#{description},#{origin},0,#{detailPath},0,#{type},now(),now(),#{opt})
	</insert>
	
	<update id="updateThirdStatus" parameterType="Object">
		update third_goods set status = 1 , update_time = now() where id = #{id};
	</update>
	
	<update id="update" parameterType="Object">
		update goods set goods_name = #{goodsName} , update_time = now() where id = #{id};
	</update>
	
	<update id="updateDetailPath" parameterType="Object">
		update goods set detail_path = #{detailPath} , update_time = now() where goods_id = #{goodsId};
	</update>
	
	<delete id="delete" parameterType="Object">
		delete from goods where id = #{id}; 
	</delete>
	
	<select id="selectRecordForDel" parameterType="Object" resultMap="entity">
		SELECT a.* FROM goods a where a.id = #{id} and exists 
		(select goods_id from goods_item where status in('1','2')  and goods_id = a.goods_id);
	</select>

	<select id="selectGoodsFileByGoodsId" parameterType="Object" resultMap="goodsFile">
		select * from goods_file where type = '0'
		and goods_id = #{goodsId}
	</select>
	
	<select id="selectRecordForUpd" parameterType="Object" resultMap="entity">
		SELECT a.* FROM goods a where a.id = #{id} and exists 
		(select goods_id from goods_item where status = '2' and goods_id = a.goods_id);
	</select>
	
	<select id="selectAllGoodsForRebate" parameterType="Object" resultMap="goodsRebate">
		select g.id,g.goods_id,g.goods_name,g.supplier_id,g.supplier_name,g.description,
		g.status,i.first,i.second,i.third,i.remark,i.update_time,i.opt 
		from goods g left join goods_rebate i on i.goods_id = g.goods_id 
		where 1=1
		<if test="goodsName!=null and goodsName!=''">
			and g.goods_name like concat('%',#{goodsName},'%') 
		</if>
		<if test="goodsId != null and goodsId != ''">
			and g.goods_id = #{goodsId} 
		</if>
		<if test="supplierId != null and supplierId != -1">
			and g.supplier_id = #{supplierId} 
		</if>
		order by g.id
	</select>
	
	<select id="selectGoodsRebateById" parameterType="Object" resultMap="goodsRebate">
		select * from goods_rebate where item_id = #{itemId} 
	</select>
	
	<select id="selectRecordForRebate" parameterType="Object" resultMap="goodsRebate">
		select * from goods_rebate where 1=1 and goods_id = #{goodsId} 
	</select>
	
	<insert id="insertGoodsRebate" parameterType="Object">
		insert into goods_rebate (item_id,grade_type,proportion,create_time,opt) values
		<foreach collection="list" item="item" separator=",">
			(#{item.itemId},#{item.gradeType},#{item.proportion},now(),#{item.opt})
		</foreach>
		ON DUPLICATE KEY UPDATE proportion = values(proportion),update_time = now()
	</insert>
	
	<update id="updateGoodsRebate" parameterType="Object">
		update goods_rebate set first = #{first} , second = #{second} , third = #{third} , update_time = now() where goods_id = #{goodsId} 
	</update>
	
	<select id="selectTagForPage" parameterType="Object" resultMap="goodsTag">
		select * from goods_tag
	</select>
	
	<insert id="insertGoodsTag" parameterType="Object">
		insert into goods_tag (tag_name,priority,description,create_time,update_time,opt) value
		(#{tagName},#{priority},#{description},now(),now(),#{opt})
	</insert>
	
	<update id="updateGoodsTag" parameterType="Object">
		update goods_tag set tag_name = #{tagName} , priority = #{priority} , description = #{description} , update_time = now() where id = #{id} 
	</update>
	
	<delete id="deleteGoodsTag" parameterType="Object">
		delete from goods_tag where id = #{id}
	</delete>
	
	<select id="selectTagInfo" parameterType="Object" resultMap="goodsTag">
		select * from goods_tag
		where 1=1
		<if test="tagName!=null and tagName!=''">
			and tag_name like concat('%',#{tagName},'%') 
		</if>
		<if test="id != null and id != '0'">
			and id = #{id} 
		</if>
	</select>
	
	<select id="selectTagListInfo" parameterType="Object" resultMap="goodsTag">
		select * from goods_tag
	</select>
	
	<insert id="insertTagBind" parameterType="Object">
		insert into goods_tag_bind (item_id,tag_id,create_time,update_time,opt) value
		(#{itemId},#{tagId},now(),now(),#{opt})
	</insert>
	
	<update id="updateTagBind" parameterType="Object">
		update goods_tag_bind set tag_id = #{tagId}, update_time = now() where item_id = #{itemId}
	</update>
	
	<delete id="deleteTagBind" parameterType="Object">
		delete from goods_tag_bind where item_id = #{itemId}
	</delete>
	
	<select id="selectGoodsTagBindByGoodsId" parameterType="Object" resultMap="goodsTagBind">
		select * from goods_tag_bind where item_id = #{itemId}
	</select>
	
	<select id="selectGoodsWithItem" parameterType="Object" resultMap="goodsWithItem">
		select * from goods g left join goods_item i on i.goods_id = g.goods_id where g.id = #{id} 
	</select>
	
	<select id="selectTagFuncListInfo" parameterType="Object" resultMap="tagFunc">
		select * from tag_fun
	</select>
	
	<select id="selectGoodsTagBindListInfo" parameterType="Object" resultMap="goodsTagBind">
		select * from goods_tag_bind where 1=1
		<if test="tagId != null and tagId != '0'">
			and tag_id = #{tagId} 
		</if>
	</select>
	
	<select id="selectGoodsItemByItemId" parameterType="Object" resultMap="goodsItemEntity">
		select * from goods_item where item_id = #{itemId}
	</select>
	
	<select id="selectGoodsEntityByItemId" parameterType="Object" resultMap="entity">
		select * from goods where goods_id = #{goodsId}
	</select>
	
	<update id="updateGoodsEntity" parameterType="Object">
		update goods set goods_name = #{goodsName},
		supplier_id = #{supplierId}, supplier_name = #{supplierName},
		origin = #{origin}, type = #{type}, update_time = now() 
		where goods_id = #{goodsId}
	</update>
	
	<select id="selectGoodsListForDownload" parameterType="Object" resultMap="goodsInfoListForDownload">
		select g.goods_id,gi.item_id,gi.sku,g.goods_name,b.brand,g.origin,
		gi.status goods_status,gi2.status item_status,g.supplier_name,gs.fxqty,
		gfc.name first_name,gsc.name second_name,gtc.name third_name,
		gp.proxy_price,gp.fxprice,gp.retail_price,gr.grade_type,gt.name grade_type_name,gr.proportion
		from zm_goods.goods_item gi
		left join zm_goods.goods_item_2 gi2 on gi.item_id = gi2.item_id
		left join zm_goods.goods g on g.goods_id = gi.goods_id
		left join zm_goods.base b on g.base_id = b.id
		left join zm_goods.goods_first_category gfc on b.first_category = gfc.first_id
		left join zm_goods.goods_second_category gsc on b.first_category = gsc.first_id and b.second_category = gsc.second_id
		left join zm_goods.goods_third_category gtc on b.second_category = gtc.second_id and b.third_category = gtc.third_id
		left join zm_goods.goods_stock gs on gi.item_id = gs.item_id
		left join zm_goods.goods_price gp on gi.item_id = gp.item_id
		left join zm_goods.goods_rebate gr on gi.item_id = gr.item_id
		left join zm_user.grade_type gt on gr.grade_type = gt.id
		where 1=1 
		<if test="gradeType==null or gradeType == -1">
			and gr.proportion > 0
		</if>
		<if test="gradeType!=null and gradeType != -1">
			and gr.grade_type = #{gradeType}
		</if>
		<if test="supplierId!=null and supplierId != -1">
			and g.supplier_id = #{supplierId}
		</if>
		<if test="itemIdList != null and itemIdList.size() > 0">
			and gi.item_id in 
			<foreach collection="itemIdList" item="item" open="(" separator="," close=")">
                #{item}
			</foreach>
		</if>
		order by gi.item_id
	</select>
</mapper>