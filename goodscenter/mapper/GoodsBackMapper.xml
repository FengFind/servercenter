<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zm.goods.bussiness.dao.GoodsBackMapper">

	
	<resultMap type="com.zm.goods.pojo.GoodsFile" id="goodsFile">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="goods_id" property="goodsId" jdbcType="VARCHAR" />
		<result column="path" property="path" jdbcType="VARCHAR" />
		<result column="suffix" property="suffix" jdbcType="VARCHAR" />
		<result column="storeType" property="storeType" jdbcType="INTEGER" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
		<result column="opt" property="opt" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.GoodsRebateEntity" id="goodsRebate">
		<id column="id" property="id"/>
		<result column="specs_tp_id" property="specsTpId"/>
		<result column="grade_type" property="gradeType"/>
		<result column="proportion" property="proportion"/>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.GoodsTagEntity" id="goodsTag">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="tag_name" property="tagName" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="priority" property="priority" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
		<result column="opt" property="opt" jdbcType="VARCHAR" />
		<result column="tag_ratio" property="tagRatio" jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.TagFuncEntity" id="tagFunc">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="fun_name" property="funcName" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
		<result column="opt" property="opt" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.GoodsInfoListForDownload" id="goodsInfoListForDownload">
		<result column="goods_id" property="goodsId"/>
		<result column="item_id" property="itemId" />
		<result column="sku" property="sku"/>
		<result column="info" property="info"/>
		<result column="goods_name" property="goodsName"/>
		<result column="brand" property="brand"/>
		<result column="origin" property="origin"/>
		<result column="goods_status" property="goodsStatus"/>
		<result column="item_status" property="itemStatus"/>
		<result column="supplier_name" property="supplierName"/>
		<result column="fxqty" property="fxQty"/>
		<result column="first_name" property="firstName"/>
		<result column="second_name" property="secondName"/>
		<result column="third_name" property="thirdName"/>
		<result column="proxy_price" property="proxyPrice"/>
		<result column="fxprice" property="fxPrice"/>
		<result column="retail_price" property="retailPrice"/>
		<result column="grade_type" property="gradeType"/>
		<result column="grade_type_name" property="gradeTypeName"/>
		<result column="proportion" property="proportion"/>
		<result column="encode" property="encode"/>
		<result column="carton" property="carton"/>
		<result column="shelf_life" property="shelfLife"/>
		<result column="goods_type" property="goodsType"/>
		<result column="unit" property="unit"/>
		<collection property="goodsTagList" ofType="com.zm.goods.pojo.GoodsTagEntity">
			<id column="gtbid" property="id"/>
			<result column="tag_name" property="tagName"/>
		</collection>
		<collection property="goodsPriceRatioList" ofType="com.zm.goods.pojo.GoodsPriceRatioEntity">
			<id column="gprid" property="id"/>
			<result column="ratio_platform_name" property="ratioPlatformName"/>
			<result column="ratio_price" property="ratioPrice"/>
			<result column="evaluate_qty" property="evaluateQty"/>
			<result column="sales_volume" property="salesVolume"/>
		</collection>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.GoodsInfoListForDownload" id="goodsInfoListForDownloadPartOne">
		<result column="goods_id" property="goodsId"/>
		<result column="item_id" property="itemId" />
		<result column="sku" property="sku"/>
		<result column="info" property="info"/>
		<result column="goods_name" property="goodsName"/>
		<result column="brand" property="brand"/>
		<result column="origin" property="origin"/>
		<result column="goods_status" property="goodsStatus"/>
		<result column="item_status" property="itemStatus"/>
		<result column="supplier_name" property="supplierName"/>
		<result column="first_name" property="firstName"/>
		<result column="second_name" property="secondName"/>
		<result column="third_name" property="thirdName"/>
		<result column="encode" property="encode"/>
		<result column="carton" property="carton"/>
		<result column="shelf_life" property="shelfLife"/>
		<result column="goods_type" property="goodsType"/>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.GoodsInfoListForDownload" id="goodsInfoListForDownloadPartTwo">
		<result column="item_id" property="itemId" />
		<result column="fxqty" property="fxQty"/>
		<result column="proxy_price" property="proxyPrice"/>
		<result column="fxprice" property="fxPrice"/>
		<result column="retail_price" property="retailPrice"/>
		<result column="grade_type" property="gradeType"/>
		<result column="grade_type_name" property="gradeTypeName"/>
		<result column="proportion" property="proportion"/>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.GoodsInfoListForDownload" id="goodsInfoListForDownloadPartThree">
		<result column="item_id" property="itemId" />
		<collection property="goodsTagList" ofType="com.zm.goods.pojo.GoodsTagEntity">
			<id column="gtbid" property="id"/>
			<result column="tag_name" property="tagName"/>
		</collection>
		<collection property="goodsPriceRatioList" ofType="com.zm.goods.pojo.GoodsPriceRatioEntity">
			<id column="gprid" property="id"/>
			<result column="ratio_platform_name" property="ratioPlatformName"/>
			<result column="ratio_price" property="ratioPrice"/>
			<result column="evaluate_qty" property="evaluateQty"/>
			<result column="sales_volume" property="salesVolume"/>
		</collection>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.po.GoodsSpecs" id="goodsSpecs">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="specs_id" property="specsId" jdbcType="VARCHAR" />
		<result column="encode" property="encode" jdbcType="VARCHAR" />
		<result column="conversion" property="conversion" jdbcType="INTEGER" />
		<result column="unit" property="unit" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="weight" property="weight" jdbcType="INTEGER" />
		<result column="info" property="info" jdbcType="VARCHAR" />
		<result column="carton" property="carton" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
		<result column="opt" property="opt" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.po.GoodsSpecsTradePattern" id="goodsSpecsTp">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="specs_id" property="specsId" jdbcType="VARCHAR" />
		<result column="goods_id" property="goodsId" jdbcType="VARCHAR" />
		<result column="specs_tp_id" property="specsTpId" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="is_free_post" property="freePost" jdbcType="INTEGER" />
		<result column="is_free_tax" property="freeTax" jdbcType="INTEGER" />
		<result column="tag_ratio" property="tagRatio" jdbcType="INTEGER" />
		<result column="increment_tax" property="incrementTax" jdbcType="NUMERIC" />
		<result column="tariff" property="tariff" jdbcType="NUMERIC" />
		<result column="excise_tax" property="exciseTax" jdbcType="NUMERIC" />
		<result column="is_promotion" property="promotion" jdbcType="INTEGER" />
		<result column="discount" property="discount" jdbcType="NUMERIC" />
		<result column="is_welfare" property="welfare" jdbcType="INTEGER" />
		<result column="is_distribution" property="distribution" jdbcType="INTEGER" />
		<result column="is_combinedgoods" property="combinedgoods" jdbcType="INTEGER" />
		<result column="combined_specs_tp_id" property="combinedSpecsTpId" jdbcType="VARCHAR" />
		<result column="distribution_price" property="distributionPrice" jdbcType="NUMERIC" />
		<result column="display" property="display" jdbcType="INTEGER" />
		<result column="retail_price" property="retailPrice" jdbcType="NUMERIC" />
		<result column="vip_price" property="vipPrice" jdbcType="NUMERIC" />
		<result column="line_price" property="linePrice" jdbcType="NUMERIC" />
		<result column="instant_ratio" property="instantRatio" jdbcType="NUMERIC" />
		<result column="sale_num" property="saleNum" jdbcType="INTEGER" />
		<result column="item_id" property="itemId" jdbcType="VARCHAR" />
		<result column="is_fresh" property="fresh" jdbcType="INTEGER" />
		<result column="upshelf_time" property="upshelfTime" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
		<result column="opt" property="opt" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.po.Goods" id="goodsItem">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="goods_id" property="goodsId" jdbcType="VARCHAR" />
		<result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="brand_id" property="brandId" jdbcType="INTEGER" />
		<result column="brand" property="brandName" jdbcType="VARCHAR" />
		<result column="origin" property="origin" jdbcType="VARCHAR" />
		<result column="subtitle" property="subtitle" jdbcType="VARCHAR" />
		<result column="detail_path" property="detailPath" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="third_category" property="thirdCategory" jdbcType="VARCHAR" />
		<result column="second_category" property="secondCategory" jdbcType="VARCHAR" />
		<result column="first_category" property="firstCategory" jdbcType="VARCHAR" />
		<result column="hscode" property="hscode" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
		<result column="opt" property="opt" jdbcType="VARCHAR" />
		<result column="access_path" property="accessPath" jdbcType="VARCHAR" />
		<collection property="goodsFileList" ofType="com.zm.goods.pojo.GoodsFile">
			<id column="file_id" property="id" jdbcType="INTEGER" />
			<result column="goods_id" property="goodsId" jdbcType="VARCHAR" />
			<result column="path" property="path" jdbcType="VARCHAR" />
		</collection>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.vo.BackGoodsItemVO" id="backGoodsItem">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="goods_id" property="goodsId" jdbcType="VARCHAR" />
		<result column="item_id" property="itemId" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
		<result column="encode" property="encode" jdbcType="VARCHAR" />
		<result column="item_code" property="itemCode" jdbcType="VARCHAR" />
		<result column="sku" property="sku" jdbcType="VARCHAR" />
		<result column="brand" property="brandName" jdbcType="VARCHAR" />
		<result column="path" property="path" jdbcType="VARCHAR" />
		<result column="firstName" property="firstCategory" jdbcType="VARCHAR" />
		<result column="secondName" property="secondCategory" jdbcType="VARCHAR" />
		<result column="thirdName" property="thirdCategory" jdbcType="VARCHAR" />
		<result column="supplier_name" property="supplierName" jdbcType="VARCHAR" />
		<result column="info" property="info" jdbcType="VARCHAR" />
		<result column="cost_price" property="costPrice" jdbcType="NUMERIC" />
		<result column="internal_price" property="internalPrice" jdbcType="NUMERIC" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="opt" property="opt" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.vo.BackGoodsVO" id="backGoods">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="goods_id" property="goodsId" jdbcType="VARCHAR" />
		<result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="brand" property="brand" jdbcType="VARCHAR" />
		<result column="origin" property="origin" jdbcType="VARCHAR" />
		<result column="detail_path" property="detailPath" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="third_name" property="thirdName" jdbcType="VARCHAR" />
		<result column="second_name" property="secondName" jdbcType="VARCHAR" />
		<result column="first_name" property="firstName" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="opt" property="opt" jdbcType="VARCHAR" />
		<collection property="goodsFileList" ofType="com.zm.goods.pojo.GoodsFile">
			<id column="file_id" property="id" jdbcType="INTEGER" />
			<result column="goods_id" property="goodsId" jdbcType="VARCHAR" />
			<result column="path" property="path" jdbcType="VARCHAR" />
		</collection>
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.vo.GoodsSpecsVO" id="specsVO">
		<id column="specs_tp_id" property="specsTpId" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="increment_tax" property="incrementTax" jdbcType="NUMERIC" />
		<result column="tariff" property="tariff" jdbcType="NUMERIC" />
		<result column="excise_tax" property="exciseTax" jdbcType="NUMERIC" />
		<result column="is_welfare" property="welfare" jdbcType="BOOLEAN" />
		<result column="is_distribution" property="distribution" jdbcType="BOOLEAN" />
		<result column="distribution_price" property="distributionPrice" jdbcType="NUMERIC" />
		<result column="display" property="display" jdbcType="INTEGER" />
		<result column="stock" property="stock" jdbcType="INTEGER" />
		<result column="retail_price" property="retailPrice" jdbcType="NUMERIC" />
		<result column="line_price" property="linePrice" jdbcType="NUMERIC" />
		<result column="instant_ratio" property="instantRatio" jdbcType="NUMERIC" />
		<result column="sale_num" property="saleNum" jdbcType="INTEGER" />
		<result column="upshelf_time" property="upshelfTime" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="opt" property="opt" jdbcType="VARCHAR" />
		<result column="tag_name" property="tagNames" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap type="com.zm.goods.pojo.vo.BackItemsVO" id="itemVO">
		<id column="item_id" property="itemId" jdbcType="VARCHAR" />
		<result column="sku" property="sku" jdbcType="VARCHAR" />
		<result column="item_code" property="itemCode" jdbcType="VARCHAR" />
		<result column="supplier_id" property="supplierId" jdbcType="INTEGER" />
		<result column="supplier_name" property="supplierName" jdbcType="VARCHAR" />
		<result column="stock" property="stock" jdbcType="INTEGER" />
		<collection property="priceList" ofType="com.zm.goods.pojo.po.GoodsPricePO">
			<id column="id" property="id" jdbcType="INTEGER" />
			<result column="min" property="min" jdbcType="INTEGER" />
			<result column="max" property="max" jdbcType="INTEGER" />
			<result column="cost_price" property="costPrice" jdbcType="NUMERIC" />
			<result column="internal_price" property="internalPrice" jdbcType="NUMERIC" />
			</collection>
	</resultMap>
	
	<select id="select" parameterType="Object" resultMap="goodsWithItems">
		select * from goods g left join goods_item i on i.goods_id = g.goods_id where g.id = #{id} and i.is_del = 0 and g.is_del = 0 
	</select>
	
	<select id="selectById" parameterType="Object" resultMap="entity">
		select * from goods where id = #{id} and is_del = 0
	</select>
	
	<insert id="insertGoods" parameterType="Object">
		insert into kj_goods (goods_id,type,goods_name,subtitle,description,brand_id,origin,detail_path,
		first_category,second_category,third_category,hscode,display,is_del,create_time,opt) value
		(#{goodsId},#{type},#{goodsName},#{subtitle},#{description},#{brandId},#{origin},#{detailPath},#{firstCategory},
		#{secondCategory},#{thirdCategory},#{hscode},0,0,now(),#{opt})
	</insert>
	
	<update id="updateGoods" parameterType="Object">
		update kj_goods 
		<if test="goodsName != null and goodsName != ''">
			set goods_name = #{goodsName},
		</if>
		<if test="subtitle != null and subtitle != ''">
			set subtitle = #{subtitle},
		</if>
		<if test="description != null and description != ''">
			set description = #{description},
		</if>
		<if test="brandId != null and brandId != ''">
			set brand_id = #{brandId},
		</if>
		<if test="origin != null and origin != ''">
			set origin = #{origin},
		</if>
		<if test="detailPath != null and detailPath != ''">
			set detail_path = #{detailPath},
		</if>
		<if test="firstCategory != null and firstCategory != ''">
			set first_category = #{firstCategory},
		</if>
		<if test="secondCategory != null and secondCategory != ''">
			set second_category = #{secondCategory},
		</if>
		<if test="thirdCategory != null and thirdCategory != ''">
			set third_category = #{thirdCategory},
		</if>
		<if test="hscode != null and hscode != ''">
			set hscode = #{hscode},
		</if>
		<if test="opt != null and opt != ''">
			set opt = #{opt},
		</if>
		update_time = now() where goods_id = #{goodsId}
	</update>
	
	<insert id="insertSpecsTpBatch" parameterType="Object">
		INSERT INTO kj_goods_specs_tradepattern
		(specs_tp_id,goods_id,specs_id,increment_tax,tariff,excise_tax,distribution_price,retail_price,line_price,sale_num,
		create_time,is_del,opt)
		values
		<foreach collection="list" item="item" separator=",">
			(#{item.specsTpId},#{item.goodsId},#{item.specsId},#{item.incrementTax},#{item.tariff},#{item.exciseTax},
			#{item.distributionPrice},#{item.retailPrice},#{item.linePrice},#{item.saleNum},now(),0,#{item.opt})
		</foreach>
	</insert>
	
	<update id="updateSpecsTp" parameterType="Object">
		update kj_goods_specs_tradepattern 
		<if test="incrementTax != null and incrementTax != ''">
			increment_tax = #{incrementTax},
		</if>
		<if test="tariff != null and tariff != ''">
			tariff = #{tariff},
		</if>
		<if test="exciseTax != null and exciseTax != ''">
			excise_tax = #{exciseTax},
		</if>
		<if test="distributionPrice != null and distributionPrice != ''">
			distribution_price = #{distributionPrice},
		</if>
		<if test="retailPrice != null and retailPrice != ''">
			retail_price = #{retailPrice},
		</if>
		<if test="linePrice != null and linePrice != ''">
			line_price = #{linePrice},
		</if>
		<if test="saleNum != null and saleNum != ''">
			sale_num = #{saleNum},
		</if>
		<if test="opt != null and opt != ''">
			opt = #{opt},
		</if>
		tag_ratio = #{tagRatio}, update_time = now() where specs_tp_id = #{specsTpId}
	</update>
	
	<insert id="insertItemBatch" parameterType="Object">
		INSERT INTO kj_goods_item
		(specs_tp_id,item_id,supplier_id,supplier_name,status,unit,sku,item_code,shelf_life,create_time,is_del,opt)
		values
		<foreach collection="list" item="item" separator=",">
		(#{item.specsTpId},#{item.itemId},#{item.supplierId},#{item.supplierName},0,#{item.unit},#{item.sku},#{item.itemCode},
		#{item.shelfLife},now(),0,#{item.opt})
		</foreach>
	</insert>
	
	<update id="updateItemBatch" parameterType="Object">
		<foreach collection="list" item="item" separator=";">
			update kj_goods_item 
			<if test="supplierId != null and supplierId != ''">
				supplier_id = #{supplierId},
			</if>
			<if test="supplierName != null and supplierName != ''">
				supplier_name = #{supplierName},
			</if>
			<if test="unit != null and unit != ''">
				unit = #{unit},
			</if>
			<if test="sku != null and sku != ''">
				sku = #{sku},
			</if>
			<if test="itemCode != null and itemCode != ''">
				item_code = #{itemCode},
			</if>
			<if test="shelfLife != null and shelfLife != ''">
				shelf_life = #{shelfLife},
			</if>
			<if test="opt != null and opt != ''">
				opt = #{opt},
			</if>
			<if test="status != null and status != ''">
				status = #{status},
			</if>
			update_time = now() where item_id = #{itemId}
		</foreach>
	</update>
	
	<insert id="insertItemPriceBatch" parameterType="Object">
		insert into kj_goods_price(item_id,min,max,cost_price,internal_price,create_time,opt) 
		values
		<foreach collection="list" item="item" separator=",">
		(#{item.itemId},#{item.min},#{item.max},#{item.costPrice},#{item.internalPrice},now(),0,#{item.opt})
		</foreach>
	</insert>
	
	<update id="updateItemPriceBatch" parameterType="Object">
		<foreach collection="list" item="item" separator=";">
			update kj_goods_price 
			<if test="min != null and min != ''">
				min = #{min},
			</if>
			<if test="max != null and max != ''">
				max = #{max},
			</if>
			<if test="costPrice != null and costPrice != ''">
				cost_price = #{costPrice},
			</if>
			<if test="internalPrice != null and internalPrice != ''">
				internal_price = #{internalPrice},
			</if>
			<if test="opt != null and opt != ''">
				opt = #{opt},
			</if>
			update_time = now() where item_id = #{itemId}
		</foreach>
	</update>
	
	<insert id="insertStockBatch" parameterType="Object">
		insert ignore into goods_stock 
		(item_id,qpqty,fxqty,defqty,lockedqty,frozenqty,create_time,update_time)
		values
		<foreach collection="list" item="item" open="" close=""
			separator=",">
			(#{item.itemId},#{item.fxqty},#{item.fxqty},0,0,0,now(),now())
		</foreach>
	</insert>
	
	<update id="updateStockBatch" parameterType="Object">
		<foreach collection="list" item="item" separator=";">
			update goods_stock set fxqty = #{item.fxqty}, update_time = now() where item_id = #{item.itemId}
		</foreach>
	</update>
	
	<insert id="insertSpecsBatch" parameterType="Object">
		INSERT INTO kj_specs_goods
		(specs_id,encode,weight,description,unit,info,carton,conversion,specs_goods_name,create_time,is_del,opt)
		values
		<foreach collection="list" item="item" separator=",">
			(#{item.specsId},#{item.encode},#{item.weight},#{item.description},#{item.unit},#{item.info},#{item.carton},
			#{item.conversion},#{item.specsGoodsName},now(),0,#{item.opt})
		</foreach>
	</insert>
	
	<update id="updateSpecs"  parameterType="Object">
		update kj_specs_goods 
		<if test="encode != null and encode != ''">
			encode = #{encode},
		</if>
		<if test="weight != null and weight != ''">
			weight = #{weight},
		</if>
		<if test="description != null and description != ''">
			description = #{description},
		</if>
		<if test="unit != null and unit != ''">
			unit = #{unit},
		</if>
		<if test="info != null and info != ''">
			info = #{info},
		</if>
		<if test="carton != null and carton != ''">
			carton = #{carton},
		</if>
		<if test="conversion != null and conversion != ''">
			conversion = #{conversion},
		</if>
		<if test="specsGoodsName != null and specsGoodsName != ''">
			specs_goods_name = #{specsGoodsName},
		</if>
		<if test="opt != null and opt != ''">
			opt = #{opt},
		</if>
		update_time = now() where specs_id = #{specsId}
	</update>
	
	<update id="updateDetailPath" parameterType="Object">
		update kj_goods set detail_path = #{detailPath} , update_time = now() where goods_id = #{goodsId};
	</update>
	
	<select id="selectGoodsFileByGoodsId" parameterType="Object" resultMap="goodsFile">
		select * from goods_file where type = '0'
		and goods_id = #{goodsId} order by id asc
	</select>
	
	<select id="selectGoodsRebateBySpecsTpId" parameterType="Object" resultMap="goodsRebate">
		select * from kj_goods_rebate where specs_tp_id = #{specsTpId} 
	</select>
	
	<insert id="insertGoodsRebate" parameterType="Object">
		insert into kj_goods_rebate (specs_tp_id,grade_type,proportion,create_time,opt) values
		<foreach collection="list" item="item" separator=",">
			(#{item.specsTpId},#{item.gradeType},#{item.proportion},now(),#{item.opt})
		</foreach>
		ON DUPLICATE KEY UPDATE proportion = values(proportion),update_time = now()
	</insert>
	
	<select id="selectTagForPage" parameterType="Object" resultMap="goodsTag">
		select * from goods_tag
	</select>
	
	<insert id="insertGoodsTag" parameterType="Object">
		insert into goods_tag (tag_name,priority,description,create_time,update_time,opt,tag_ratio) value
		(#{tagName},#{priority},#{description},now(),now(),#{opt},#{tagRatio})
	</insert>
	
	<update id="updateGoodsTag" parameterType="Object">
		update goods_tag set tag_name = #{tagName} , priority = #{priority} , description = #{description} , update_time = now() where id = #{id} 
	</update>
	
	<delete id="deleteGoodsTag" parameterType="Object">
		delete from goods_tag where id = #{id}
	</delete>
	
	<select id="selectTagInfo" parameterType="Object" resultMap="goodsTag">
		select * from goods_tag
		where 1=1
		<if test="tagName!=null and tagName!=''">
			and tag_name like concat('%',#{tagName},'%') 
		</if>
		<if test="id != null and id != '0'">
			and id = #{id} 
		</if>
	</select>
	
	<select id="selectTagListInfo" parameterType="Object" resultMap="goodsTag">
		select * from goods_tag
	</select>
	
	<select id="selectTagFuncListInfo" parameterType="Object" resultMap="tagFunc">
		select * from tag_fun
	</select>
	
	<select id="selectGoodsListForDownload" parameterType="Object" resultMap="goodsInfoListForDownload">
		select g.goods_id,gi.item_id,gi.sku,gi.info,g.goods_name,b.brand,g.origin,
		gi.is_fx goods_status,gi.status item_status,g.supplier_name,gs.fxqty,b.unit,
		b.first_category first_name,b.second_category second_name,b.third_category third_name,
		gp.proxy_price,gp.fxprice,gp.retail_price,ifnull(gr.grade_type,#{gradeType}) grade_type,ifnull(gr.proportion,0) proportion,
		gtb.id gtbid,gt.tag_name,gpr.id gprid,grp.ratio_platform_name,gpr.ratio_price,
		gpr.evaluate_qty,gpr.sales_volume,gi.encode,gi.carton,gi.shelf_life,g.type goods_type 
		from zm_goods.goods_item gi
		left join zm_goods.goods g on g.goods_id = gi.goods_id
		left join zm_goods.base b on g.base_id = b.id
		left join zm_goods.goods_stock gs on gi.item_id = gs.item_id
		left join zm_goods.goods_price gp on gi.item_id = gp.item_id
		left join zm_goods.goods_rebate gr on gi.item_id = gr.item_id
		left join zm_goods.goods_tag_bind gtb on gi.item_id = gtb.item_id
		left join zm_goods.goods_tag gt on gtb.tag_id = gt.id
		left join zm_goods.goods_price_ratio gpr on gi.item_id = gpr.item_id
		left join zm_goods.goods_ratio_platform grp on gpr.ratio_platform_id = grp.id
		where 1=1 and gi.is_del = 0 and g.is_del = 0
		<if test="proportionFlg!=null and proportionFlg != -1">
			and gr.proportion &gt; 0
		</if>
<!-- 		<if test="gradeType!=null and gradeType != -1"> -->
<!-- 			and gr.grade_type = #{gradeType} -->
<!-- 		</if> -->
		<if test="supplierId!=null and supplierId != -1">
			and g.supplier_id = #{supplierId}
		</if>
		<if test="itemIdList != null and itemIdList.size() > 0">
			and gi.item_id in 
			<foreach collection="itemIdList" item="item" open="(" separator="," close=")">
                #{item}
			</foreach>
		</if>
		<if test="rebateStart!=null and rebateStart != -1">
			and gr.proportion &gt;= #{rebateStart}
		</if>
		<if test="rebateEnd!=null and rebateEnd != -1">
			and gr.proportion &lt;= #{rebateEnd}
		</if>
		<if test="tagIdList != null and tagIdList.size() > 0">
			and gtb.tag_id in 
			<foreach collection="tagIdList" item="item" open="(" separator="," close=")">
                #{item}
			</foreach>
		</if>
		<if test="itemStatus!=null and itemStatus != -1">
			and gi.status = #{itemStatus}
		</if>
		<if test="firstCatalogList != null and firstCatalogList.size() > 0">
			and b.first_category in 
			<foreach collection="firstCatalogList" item="item" open="(" separator="," close=")">
                #{item}
			</foreach>
		</if>
		<if test="secondCatalogList != null and secondCatalogList.size() > 0">
			and b.second_category in 
			<foreach collection="secondCatalogList" item="item" open="(" separator="," close=")">
                #{item}
			</foreach>
		</if>
		<if test="thirdCatalogList != null and thirdCatalogList.size() > 0">
			and b.third_category in 
			<foreach collection="thirdCatalogList" item="item" open="(" separator="," close=")">
                #{item}
			</foreach>
		</if>
		<if test="goodsType!=null and goodsType != -1">
			and g.type = #{goodsType}
		</if>
		<if test="gradeType!=null and gradeType != -1">
			having grade_type = #{gradeType}
		</if>
		order by gi.item_id
	</select>
	
	<select id="selectGoodsListForDownloadPartOne" parameterType="Object" resultMap="goodsInfoListForDownloadPartOne">
		select g.goods_id,gi.item_id,gi.sku,gi.info,g.goods_name,b.brand,g.origin,
		gi.is_fx goods_status,gi.status item_status,g.supplier_name,
		b.first_category first_name,b.second_category second_name,b.third_category third_name,
		gi.encode,gi.carton,gi.shelf_life,g.type goods_type 
		from zm_goods.goods_item gi
		left join zm_goods.goods g on g.goods_id = gi.goods_id
		left join zm_goods.base b on g.base_id = b.id
		where 1=1 and gi.is_del = 0 and g.is_del = 0
		<if test="supplierId!=null and supplierId != -1">
			and g.supplier_id = #{supplierId}
		</if>
		<if test="itemIdList != null and itemIdList.size() > 0">
			and gi.item_id in 
			<foreach collection="itemIdList" item="item" open="(" separator="," close=")">
                #{item}
			</foreach>
		</if>
		<if test="itemStatus!=null and itemStatus != 0">
			and gi.status = #{itemStatus}
		</if>
		<if test="firstCatalogList != null and firstCatalogList.size() > 0">
			and b.first_category in 
			<foreach collection="firstCatalogList" item="item" open="(" separator="," close=")">
                #{item}
			</foreach>
		</if>
		<if test="secondCatalogList != null and secondCatalogList.size() > 0">
			and b.second_category in 
			<foreach collection="secondCatalogList" item="item" open="(" separator="," close=")">
                #{item}
			</foreach>
		</if>
		<if test="thirdCatalogList != null and thirdCatalogList.size() > 0">
			and b.third_category in 
			<foreach collection="thirdCatalogList" item="item" open="(" separator="," close=")">
                #{item}
			</foreach>
		</if>
		order by gi.item_id
	</select>
	
	<select id="selectGoodsListForDownloadPartTwo" parameterType="Object" resultMap="goodsInfoListForDownloadPartTwo">
		select gi.item_id,gs.fxqty,
		gp.proxy_price,gp.fxprice,gp.retail_price,ifnull(gr.grade_type,#{gradeType}) grade_type,ifnull(gr.proportion,0) proportion,
		from zm_goods.goods_item gi
		left join zm_goods.goods_stock gs on gi.item_id = gs.item_id
		left join zm_goods.goods_price gp on gi.item_id = gp.item_id
		left join zm_goods.goods_rebate gr on gi.item_id = gr.item_id
		where 1=1 and gi.is_del = 0
		<if test="proportionFlg!=null and proportionFlg != -1">
			and gr.proportion &gt; 0
		</if>
<!-- 		<if test="gradeType!=null and gradeType != -1"> -->
<!-- 			and gr.grade_type = #{gradeType} -->
<!-- 		</if> -->
		<if test="itemIdList != null and itemIdList.size() > 0">
			and gi.item_id in 
			<foreach collection="itemIdList" item="item" open="(" separator="," close=")">
                #{item}
			</foreach>
		</if>
		<if test="rebateStart!=null and rebateStart != -1">
			and gr.proportion &gt;= #{rebateStart}
		</if>
		<if test="rebateEnd!=null and rebateEnd != -1">
			and gr.proportion &lt;= #{rebateEnd}
		</if>
		<if test="gradeType!=null and gradeType != -1">
			having grade_type = #{gradeType}
		</if>
		order by gi.item_id,gr.grade_type
	</select>
	
	<select id="selectGoodsListForDownloadPartThree" parameterType="Object" resultMap="goodsInfoListForDownloadPartThree">
		select gi.item_id,
		gtb.id gtbid,gt.tag_name,gpr.id gprid,grp.ratio_platform_name,gpr.ratio_price,
		gpr.evaluate_qty,gpr.sales_volume
		from zm_goods.goods_item gi
		left join zm_goods.goods_tag_bind gtb on gi.item_id = gtb.item_id
		left join zm_goods.goods_tag gt on gtb.tag_id = gt.id
		left join zm_goods.goods_price_ratio gpr on gi.item_id = gpr.item_id
		left join zm_goods.goods_ratio_platform grp on gpr.ratio_platform_id = grp.id
		where 1=1 and gi.is_del = 0
		<if test="itemIdList != null and itemIdList.size() > 0">
			and gi.item_id in 
			<foreach collection="itemIdList" item="item" open="(" separator="," close=")">
                #{item}
			</foreach>
		</if>
		<if test="tagIdList != null and tagIdList.size() > 0">
			and gtb.tag_id in 
			<foreach collection="tagIdList" item="item" open="(" separator="," close=")">
                #{item}
			</foreach>
		</if>
		order by gi.item_id
	</select>

	<select id="selectGoodsFileByParam" parameterType="Object" resultMap="goodsFile">
		select id,goods_id,path 
		from zm_goods.goods_file
		where id in ( 
		SELECT min(id) id
		FROM zm_goods.goods_file 
		WHERE 1=1 AND goods_id in 
		<foreach collection="list" item="item" open="(" close=")"
			separator=",">
			#{item,jdbcType = VARCHAR}
		</foreach>
		group by goods_id
		)
	</select>
	
	<update id="updateSpecsTpTagRatioByList" parameterType="Object">
		<foreach collection="list" item="item" separator=";">
			UPDATE kj_goods_specs_tradepattern
	        SET
		        tag_ratio = tag_ratio + #{item.tagRatio},
		        update_time = now()
	        WHERE
	        	specs_tp_id=#{item.specsTpId}
		</foreach>
	</update>
	
	<select id = "getGoodsPicPath" parameterType="Object" resultType="java.lang.String">
		select path from goods_file where goods_id = #{goodsId} order by id asc
	</select>
	
	<update id="updateRetailPrice" parameterType="java.util.HashMap">
		<foreach item="value" index="key" collection="param.entrySet()" separator=";">
			update kj_goods_specs_tradepattern set retail_price = #{value} where specs_tp_id =  #{key} limit 1
		</foreach>
	</update>
	
	<select id="checkGoodsTagUsing" parameterType="Object" resultType="java.lang.Integer">
		select count(*) from kj_goods_tag_bind where tag_id = #{id}
	</select>
	
	<select id="listGoodsSpecsByEnCodeList" parameterType="Object" resultMap="goodsSpecs">
		select * from kj_specs_goods where encode in 
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</select>
	
	<select id="listGoodsSpecsTradPatternByParam" parameterType="Object" resultMap="goodsSpecsTp">
		select gtp.* from kj_goods_specs_tradepattern gtp 
		left join kj_goods g on gtp.goods_id = g.goods_id 
		where g.type = #{type} and gtp.specs_id in 
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</select>
	
	<select id="listGoodsByCategoryAndBrand" parameterType="Object" resultMap="goodsItem">
		select g.id,g.goods_id,g.goods_name, g.description,g.detail_path,g.subtitle,g.hscode,
		g.type,g.third_category,g.first_category,g.second_category,g.access_path,g.origin,
		gf.id as file_id,gf.path
		from kj_goods g 
		left join goods_file gf on g.goods_id = gf.goods_id 
		where g.is_del = 0 and gf.type = 0 and g.third_category = #{thirdCategory} and g.brand_id = #{brandId}
	</select>
	
	<update id="updateItemStatusPass" parameterType="Object">
		update kj_goods_item set status = 2,update_time = now() where item_id = #{itemId}
	</update>
	
	<update id="updateSpecsTpCanBeUpShelf" parameterType="Object">
		update kj_goods_specs_tradepattern set status = 1,update_time = now() where specs_tp_id = #{specsTpId} and status = 0
	</update>
	
	<update id="updateItemStatusUnPass" parameterType="Object">
		update kj_goods_item set status = 11,reason = #{reason},update_time = now() where item_id = #{itemId}
	</update>
	
	<select id="countItemPassBySpecsTpId" parameterType="Object" resultType="java.lang.Integer">
		select count(*) from kj_goods_item where specs_tp_id = #{specsTpId} and status = 2
	</select>
	
	<update id="updateSpecsTpInit" parameterType="Object">
		update kj_goods_specs_tradepattern set status = 0,update_time = now() where specs_tp_id = #{specsTpId}
	</update>
	
	<update id="updateWelfareDisplay" parameterType="Object">
		update kj_goods_specs_tradepattern set is_welfare = #{welfare},update_time = now() where specs_tp_id = #{specsTpId}
	</update>
	
	<select id="listItems4Page" parameterType="Object" resultMap="backGoodsItem">
		select gi.id,gi.status,gi.create_time,gi.opt,gi.item_id,gi.supplier_name,gi.sku,gi.item_code,gs.info,
		g.goods_id,g.goods_name,gcb.brand,gfc.name as firstName,gsc.name as secondName,gtc.name as thirdName,
		gs.encode,p.cost_price,g.internal_price,gf.path,g.type from kj_goods_item gi 
		left join kj_goods_specs_tradepattern gtp on gi.item_id = gtp.item_id 
		left join kj_specs_goods gs on gtp.specs_id = gs.specs_id 
		left join kj_goods g on gtp.goods_id = g.goods_id 
		left join goods_category_brand gcb on gcb.brand_id = g.brand_id 
		left join goods_first_category gfc on gfc.first_id = g.first_id 
		left join goods_second_category gsc on gsc.second_id = g.second_id
		left join goods_third_category gtc on gtc.third_id = g.third_id 
		left join (select item_id,cost_price,internal_price from kj_goods_price group by item_id) p on p.item_id = g.item_id 
		left join (select goods_id,path from goods_file group by goods_id) gf on gf.goods_id = g.goods_id 
		where 1=1 
		<if test="itemId != null and itemId != ''">
			and gi.item_id = #{itemId}
		</if>
		<if test="sku != null and sku != ''">
			and gi.sku = #{sku}
		</if>
		<if test="itemCode != null and itemCode != ''">
			and gi.item_code = #{itemCode}
		</if>
		<if test="goodsId != null and goodsId != ''">
			and g.goods_id = #{goodsId}
		</if>
		<if test="goodsName != null and goodsName != ''">
			and g.goods_name like concat('%',#{goodsName},'%') 
		</if>
		<if test="supplierId != null and supplierId != ''">
			and gi.supplier_id = #{supplierId}
		</if>
		<if test="encode != null and encode != ''">
			and gs.encode = #{encode}
		</if>
	</select>
	
	<select id="listGoods4Page" parameterType="Object" resultMap="backGoods">
		select g.id,g.goods_id,g.goods_name,g.detail_path,g.description,g.create_time,g.opt,
		g.type,gfc.name as first_name,gsc.name as second_name,gtc.name as third_name,g.origin,
		gf.id as file_id,gf.path,gcb.brand
		from kj_goods g 
		left join goods_file gf on g.goods_id = gf.goods_id 
		left join goods_category_brand gcb on g.brand_id = gcb.brand_id 
		left join goods_first_category gfc on gfc.first_id = g.first_id 
		left join goods_second_category gsc on gsc.second_id = g.second_id
		left join goods_third_category gtc on gtc.third_id = g.third_id 
		left join kj_goods_specs_tradepattern gtp on g.goods_id = gtp.goods_id 
		where g.is_del = 0 and gf.type = 0 and gtp.status = #{status}
		<if test="item.goodsId != null and item.goodsId != ''">
			and g.goods_id = #{goodsId}
		</if>
		<if test="item.goodsName != null and item.goodsName != ''">
			and g.goods_name like concat('%',#{goodsName},'%') 
		</if>
		<if test="item.type != null and item.type != ''">
			and g.type = #{type}
		</if>
	</select>
	
	<select id="listGoodsSpecsTpByGoodsIdAndStatus" parameterType="Object" resultMap="specsVO">
		select gtp.specs_tp_id,gtp.tariff,gtp.increment_tax,gtp.excise_tax,gs.unit,gs.info,gs.weight,gtp.status,
		gtp.retail_price,sum(s.fxqty) as stock,gtp.line_price,a.tag_name,gtp.sale_num,
		gs.carton,gs.conversion,gtp.is_welfare,gtp.is_distribution,gtp.display,gtp.distribution_price,
		gtp.instant_ratio,gtp.upshelf_time,gtp.create_time,gtp.opt 
		from kj_goods_specs_tradepattern gtp 
		left join kj_specs_goods gs on gtp.specs_id = gs.specs_id 
		left join kj_goods_item gi on gtp.specs_tp_id = gi.specs_tp_id 
		left join goods_stock s on gi.item_id = s.item_id 
		left join (select gtb.specs_tp_id,group_concat(gt.tag_name) as tag_name from kj_goods_tag_bind gtb 
		left join goods_tag gt on gtb.tag_id = gt.id group by gtb.specs_tp_id) a on a.specs_tp_id = gtp.specs_tp_id
		where gi.status = 2 and gtp.goods_id = #{goodsId}
		and gtp.status = #{status}
	</select>
	
	<select id="listItemBySpecsTpId" parameterType="Object" resultMap="itemVO">
		select gi.sku,gi.item_id,gi.item_code,gi.supplier_id,gi.supplier_name,gs.fxqty,gp.cost_price,
		gp.min,gp.id,gp.max,gp.internal_price from kj_goods_item gi 
		left join goods_stock gs on gi.item_id = gs.item_id 
		left join kj_goods_price gp on gi.item_id = gp.item_id 
		where gi.specs_tp_id = #{specsTpId}
	</select>
	
</mapper>